package cloudfront

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
	"time"
)

// CreateCloudFrontOriginAccessIdentityRequest generates a request for the CreateCloudFrontOriginAccessIdentity operation.
func (c *CloudFront) CreateCloudFrontOriginAccessIdentityRequest(input *CreateCloudFrontOriginAccessIdentityInput) (req *aws.Request, output *CreateCloudFrontOriginAccessIdentityOutput) {
	if opCreateCloudFrontOriginAccessIdentity == nil {
		opCreateCloudFrontOriginAccessIdentity = &aws.Operation{
			Name:       "CreateCloudFrontOriginAccessIdentity2014_11_06",
			HTTPMethod: "POST",
			HTTPPath:   "/2014-11-06/origin-access-identity/cloudfront",
		}
	}

	req = aws.NewRequest(c.Service, opCreateCloudFrontOriginAccessIdentity, input, output)
	output = &CreateCloudFrontOriginAccessIdentityOutput{}
	req.Data = output
	return
}

func (c *CloudFront) CreateCloudFrontOriginAccessIdentity(input *CreateCloudFrontOriginAccessIdentityInput) (output *CreateCloudFrontOriginAccessIdentityOutput, err error) {
	req, out := c.CreateCloudFrontOriginAccessIdentityRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateCloudFrontOriginAccessIdentity *aws.Operation

// CreateDistributionRequest generates a request for the CreateDistribution operation.
func (c *CloudFront) CreateDistributionRequest(input *CreateDistributionInput) (req *aws.Request, output *CreateDistributionOutput) {
	if opCreateDistribution == nil {
		opCreateDistribution = &aws.Operation{
			Name:       "CreateDistribution2014_11_06",
			HTTPMethod: "POST",
			HTTPPath:   "/2014-11-06/distribution",
		}
	}

	req = aws.NewRequest(c.Service, opCreateDistribution, input, output)
	output = &CreateDistributionOutput{}
	req.Data = output
	return
}

func (c *CloudFront) CreateDistribution(input *CreateDistributionInput) (output *CreateDistributionOutput, err error) {
	req, out := c.CreateDistributionRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateDistribution *aws.Operation

// CreateInvalidationRequest generates a request for the CreateInvalidation operation.
func (c *CloudFront) CreateInvalidationRequest(input *CreateInvalidationInput) (req *aws.Request, output *CreateInvalidationOutput) {
	if opCreateInvalidation == nil {
		opCreateInvalidation = &aws.Operation{
			Name:       "CreateInvalidation2014_11_06",
			HTTPMethod: "POST",
			HTTPPath:   "/2014-11-06/distribution/{DistributionId}/invalidation",
		}
	}

	req = aws.NewRequest(c.Service, opCreateInvalidation, input, output)
	output = &CreateInvalidationOutput{}
	req.Data = output
	return
}

func (c *CloudFront) CreateInvalidation(input *CreateInvalidationInput) (output *CreateInvalidationOutput, err error) {
	req, out := c.CreateInvalidationRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateInvalidation *aws.Operation

// CreateStreamingDistributionRequest generates a request for the CreateStreamingDistribution operation.
func (c *CloudFront) CreateStreamingDistributionRequest(input *CreateStreamingDistributionInput) (req *aws.Request, output *CreateStreamingDistributionOutput) {
	if opCreateStreamingDistribution == nil {
		opCreateStreamingDistribution = &aws.Operation{
			Name:       "CreateStreamingDistribution2014_11_06",
			HTTPMethod: "POST",
			HTTPPath:   "/2014-11-06/streaming-distribution",
		}
	}

	req = aws.NewRequest(c.Service, opCreateStreamingDistribution, input, output)
	output = &CreateStreamingDistributionOutput{}
	req.Data = output
	return
}

func (c *CloudFront) CreateStreamingDistribution(input *CreateStreamingDistributionInput) (output *CreateStreamingDistributionOutput, err error) {
	req, out := c.CreateStreamingDistributionRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateStreamingDistribution *aws.Operation

// DeleteCloudFrontOriginAccessIdentityRequest generates a request for the DeleteCloudFrontOriginAccessIdentity operation.
func (c *CloudFront) DeleteCloudFrontOriginAccessIdentityRequest(input *DeleteCloudFrontOriginAccessIdentityInput) (req *aws.Request) {
	if opDeleteCloudFrontOriginAccessIdentity == nil {
		opDeleteCloudFrontOriginAccessIdentity = &aws.Operation{
			Name:       "DeleteCloudFrontOriginAccessIdentity2014_11_06",
			HTTPMethod: "DELETE",
			HTTPPath:   "/2014-11-06/origin-access-identity/cloudfront/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteCloudFrontOriginAccessIdentity, input, nil)

	return
}

func (c *CloudFront) DeleteCloudFrontOriginAccessIdentity(input *DeleteCloudFrontOriginAccessIdentityInput) (err error) {
	req := c.DeleteCloudFrontOriginAccessIdentityRequest(input)
	err = req.Send()
	return
}

var opDeleteCloudFrontOriginAccessIdentity *aws.Operation

// DeleteDistributionRequest generates a request for the DeleteDistribution operation.
func (c *CloudFront) DeleteDistributionRequest(input *DeleteDistributionInput) (req *aws.Request) {
	if opDeleteDistribution == nil {
		opDeleteDistribution = &aws.Operation{
			Name:       "DeleteDistribution2014_11_06",
			HTTPMethod: "DELETE",
			HTTPPath:   "/2014-11-06/distribution/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteDistribution, input, nil)

	return
}

func (c *CloudFront) DeleteDistribution(input *DeleteDistributionInput) (err error) {
	req := c.DeleteDistributionRequest(input)
	err = req.Send()
	return
}

var opDeleteDistribution *aws.Operation

// DeleteStreamingDistributionRequest generates a request for the DeleteStreamingDistribution operation.
func (c *CloudFront) DeleteStreamingDistributionRequest(input *DeleteStreamingDistributionInput) (req *aws.Request) {
	if opDeleteStreamingDistribution == nil {
		opDeleteStreamingDistribution = &aws.Operation{
			Name:       "DeleteStreamingDistribution2014_11_06",
			HTTPMethod: "DELETE",
			HTTPPath:   "/2014-11-06/streaming-distribution/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteStreamingDistribution, input, nil)

	return
}

func (c *CloudFront) DeleteStreamingDistribution(input *DeleteStreamingDistributionInput) (err error) {
	req := c.DeleteStreamingDistributionRequest(input)
	err = req.Send()
	return
}

var opDeleteStreamingDistribution *aws.Operation

// GetCloudFrontOriginAccessIdentityRequest generates a request for the GetCloudFrontOriginAccessIdentity operation.
func (c *CloudFront) GetCloudFrontOriginAccessIdentityRequest(input *GetCloudFrontOriginAccessIdentityInput) (req *aws.Request, output *GetCloudFrontOriginAccessIdentityOutput) {
	if opGetCloudFrontOriginAccessIdentity == nil {
		opGetCloudFrontOriginAccessIdentity = &aws.Operation{
			Name:       "GetCloudFrontOriginAccessIdentity2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/origin-access-identity/cloudfront/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opGetCloudFrontOriginAccessIdentity, input, output)
	output = &GetCloudFrontOriginAccessIdentityOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetCloudFrontOriginAccessIdentity(input *GetCloudFrontOriginAccessIdentityInput) (output *GetCloudFrontOriginAccessIdentityOutput, err error) {
	req, out := c.GetCloudFrontOriginAccessIdentityRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetCloudFrontOriginAccessIdentity *aws.Operation

// GetCloudFrontOriginAccessIdentityConfigRequest generates a request for the GetCloudFrontOriginAccessIdentityConfig operation.
func (c *CloudFront) GetCloudFrontOriginAccessIdentityConfigRequest(input *GetCloudFrontOriginAccessIdentityConfigInput) (req *aws.Request, output *GetCloudFrontOriginAccessIdentityConfigOutput) {
	if opGetCloudFrontOriginAccessIdentityConfig == nil {
		opGetCloudFrontOriginAccessIdentityConfig = &aws.Operation{
			Name:       "GetCloudFrontOriginAccessIdentityConfig2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/origin-access-identity/cloudfront/{Id}/config",
		}
	}

	req = aws.NewRequest(c.Service, opGetCloudFrontOriginAccessIdentityConfig, input, output)
	output = &GetCloudFrontOriginAccessIdentityConfigOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetCloudFrontOriginAccessIdentityConfig(input *GetCloudFrontOriginAccessIdentityConfigInput) (output *GetCloudFrontOriginAccessIdentityConfigOutput, err error) {
	req, out := c.GetCloudFrontOriginAccessIdentityConfigRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetCloudFrontOriginAccessIdentityConfig *aws.Operation

// GetDistributionRequest generates a request for the GetDistribution operation.
func (c *CloudFront) GetDistributionRequest(input *GetDistributionInput) (req *aws.Request, output *GetDistributionOutput) {
	if opGetDistribution == nil {
		opGetDistribution = &aws.Operation{
			Name:       "GetDistribution2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/distribution/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opGetDistribution, input, output)
	output = &GetDistributionOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetDistribution(input *GetDistributionInput) (output *GetDistributionOutput, err error) {
	req, out := c.GetDistributionRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetDistribution *aws.Operation

// GetDistributionConfigRequest generates a request for the GetDistributionConfig operation.
func (c *CloudFront) GetDistributionConfigRequest(input *GetDistributionConfigInput) (req *aws.Request, output *GetDistributionConfigOutput) {
	if opGetDistributionConfig == nil {
		opGetDistributionConfig = &aws.Operation{
			Name:       "GetDistributionConfig2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/distribution/{Id}/config",
		}
	}

	req = aws.NewRequest(c.Service, opGetDistributionConfig, input, output)
	output = &GetDistributionConfigOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetDistributionConfig(input *GetDistributionConfigInput) (output *GetDistributionConfigOutput, err error) {
	req, out := c.GetDistributionConfigRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetDistributionConfig *aws.Operation

// GetInvalidationRequest generates a request for the GetInvalidation operation.
func (c *CloudFront) GetInvalidationRequest(input *GetInvalidationInput) (req *aws.Request, output *GetInvalidationOutput) {
	if opGetInvalidation == nil {
		opGetInvalidation = &aws.Operation{
			Name:       "GetInvalidation2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/distribution/{DistributionId}/invalidation/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opGetInvalidation, input, output)
	output = &GetInvalidationOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetInvalidation(input *GetInvalidationInput) (output *GetInvalidationOutput, err error) {
	req, out := c.GetInvalidationRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetInvalidation *aws.Operation

// GetStreamingDistributionRequest generates a request for the GetStreamingDistribution operation.
func (c *CloudFront) GetStreamingDistributionRequest(input *GetStreamingDistributionInput) (req *aws.Request, output *GetStreamingDistributionOutput) {
	if opGetStreamingDistribution == nil {
		opGetStreamingDistribution = &aws.Operation{
			Name:       "GetStreamingDistribution2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/streaming-distribution/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opGetStreamingDistribution, input, output)
	output = &GetStreamingDistributionOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetStreamingDistribution(input *GetStreamingDistributionInput) (output *GetStreamingDistributionOutput, err error) {
	req, out := c.GetStreamingDistributionRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetStreamingDistribution *aws.Operation

// GetStreamingDistributionConfigRequest generates a request for the GetStreamingDistributionConfig operation.
func (c *CloudFront) GetStreamingDistributionConfigRequest(input *GetStreamingDistributionConfigInput) (req *aws.Request, output *GetStreamingDistributionConfigOutput) {
	if opGetStreamingDistributionConfig == nil {
		opGetStreamingDistributionConfig = &aws.Operation{
			Name:       "GetStreamingDistributionConfig2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/streaming-distribution/{Id}/config",
		}
	}

	req = aws.NewRequest(c.Service, opGetStreamingDistributionConfig, input, output)
	output = &GetStreamingDistributionConfigOutput{}
	req.Data = output
	return
}

func (c *CloudFront) GetStreamingDistributionConfig(input *GetStreamingDistributionConfigInput) (output *GetStreamingDistributionConfigOutput, err error) {
	req, out := c.GetStreamingDistributionConfigRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetStreamingDistributionConfig *aws.Operation

// ListCloudFrontOriginAccessIdentitiesRequest generates a request for the ListCloudFrontOriginAccessIdentities operation.
func (c *CloudFront) ListCloudFrontOriginAccessIdentitiesRequest(input *ListCloudFrontOriginAccessIdentitiesInput) (req *aws.Request, output *ListCloudFrontOriginAccessIdentitiesOutput) {
	if opListCloudFrontOriginAccessIdentities == nil {
		opListCloudFrontOriginAccessIdentities = &aws.Operation{
			Name:       "ListCloudFrontOriginAccessIdentities2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/origin-access-identity/cloudfront",
		}
	}

	req = aws.NewRequest(c.Service, opListCloudFrontOriginAccessIdentities, input, output)
	output = &ListCloudFrontOriginAccessIdentitiesOutput{}
	req.Data = output
	return
}

func (c *CloudFront) ListCloudFrontOriginAccessIdentities(input *ListCloudFrontOriginAccessIdentitiesInput) (output *ListCloudFrontOriginAccessIdentitiesOutput, err error) {
	req, out := c.ListCloudFrontOriginAccessIdentitiesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListCloudFrontOriginAccessIdentities *aws.Operation

// ListDistributionsRequest generates a request for the ListDistributions operation.
func (c *CloudFront) ListDistributionsRequest(input *ListDistributionsInput) (req *aws.Request, output *ListDistributionsOutput) {
	if opListDistributions == nil {
		opListDistributions = &aws.Operation{
			Name:       "ListDistributions2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/distribution",
		}
	}

	req = aws.NewRequest(c.Service, opListDistributions, input, output)
	output = &ListDistributionsOutput{}
	req.Data = output
	return
}

func (c *CloudFront) ListDistributions(input *ListDistributionsInput) (output *ListDistributionsOutput, err error) {
	req, out := c.ListDistributionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListDistributions *aws.Operation

// ListInvalidationsRequest generates a request for the ListInvalidations operation.
func (c *CloudFront) ListInvalidationsRequest(input *ListInvalidationsInput) (req *aws.Request, output *ListInvalidationsOutput) {
	if opListInvalidations == nil {
		opListInvalidations = &aws.Operation{
			Name:       "ListInvalidations2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/distribution/{DistributionId}/invalidation",
		}
	}

	req = aws.NewRequest(c.Service, opListInvalidations, input, output)
	output = &ListInvalidationsOutput{}
	req.Data = output
	return
}

func (c *CloudFront) ListInvalidations(input *ListInvalidationsInput) (output *ListInvalidationsOutput, err error) {
	req, out := c.ListInvalidationsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListInvalidations *aws.Operation

// ListStreamingDistributionsRequest generates a request for the ListStreamingDistributions operation.
func (c *CloudFront) ListStreamingDistributionsRequest(input *ListStreamingDistributionsInput) (req *aws.Request, output *ListStreamingDistributionsOutput) {
	if opListStreamingDistributions == nil {
		opListStreamingDistributions = &aws.Operation{
			Name:       "ListStreamingDistributions2014_11_06",
			HTTPMethod: "GET",
			HTTPPath:   "/2014-11-06/streaming-distribution",
		}
	}

	req = aws.NewRequest(c.Service, opListStreamingDistributions, input, output)
	output = &ListStreamingDistributionsOutput{}
	req.Data = output
	return
}

func (c *CloudFront) ListStreamingDistributions(input *ListStreamingDistributionsInput) (output *ListStreamingDistributionsOutput, err error) {
	req, out := c.ListStreamingDistributionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListStreamingDistributions *aws.Operation

// UpdateCloudFrontOriginAccessIdentityRequest generates a request for the UpdateCloudFrontOriginAccessIdentity operation.
func (c *CloudFront) UpdateCloudFrontOriginAccessIdentityRequest(input *UpdateCloudFrontOriginAccessIdentityInput) (req *aws.Request, output *UpdateCloudFrontOriginAccessIdentityOutput) {
	if opUpdateCloudFrontOriginAccessIdentity == nil {
		opUpdateCloudFrontOriginAccessIdentity = &aws.Operation{
			Name:       "UpdateCloudFrontOriginAccessIdentity2014_11_06",
			HTTPMethod: "PUT",
			HTTPPath:   "/2014-11-06/origin-access-identity/cloudfront/{Id}/config",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateCloudFrontOriginAccessIdentity, input, output)
	output = &UpdateCloudFrontOriginAccessIdentityOutput{}
	req.Data = output
	return
}

func (c *CloudFront) UpdateCloudFrontOriginAccessIdentity(input *UpdateCloudFrontOriginAccessIdentityInput) (output *UpdateCloudFrontOriginAccessIdentityOutput, err error) {
	req, out := c.UpdateCloudFrontOriginAccessIdentityRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateCloudFrontOriginAccessIdentity *aws.Operation

// UpdateDistributionRequest generates a request for the UpdateDistribution operation.
func (c *CloudFront) UpdateDistributionRequest(input *UpdateDistributionInput) (req *aws.Request, output *UpdateDistributionOutput) {
	if opUpdateDistribution == nil {
		opUpdateDistribution = &aws.Operation{
			Name:       "UpdateDistribution2014_11_06",
			HTTPMethod: "PUT",
			HTTPPath:   "/2014-11-06/distribution/{Id}/config",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateDistribution, input, output)
	output = &UpdateDistributionOutput{}
	req.Data = output
	return
}

func (c *CloudFront) UpdateDistribution(input *UpdateDistributionInput) (output *UpdateDistributionOutput, err error) {
	req, out := c.UpdateDistributionRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateDistribution *aws.Operation

// UpdateStreamingDistributionRequest generates a request for the UpdateStreamingDistribution operation.
func (c *CloudFront) UpdateStreamingDistributionRequest(input *UpdateStreamingDistributionInput) (req *aws.Request, output *UpdateStreamingDistributionOutput) {
	if opUpdateStreamingDistribution == nil {
		opUpdateStreamingDistribution = &aws.Operation{
			Name:       "UpdateStreamingDistribution2014_11_06",
			HTTPMethod: "PUT",
			HTTPPath:   "/2014-11-06/streaming-distribution/{Id}/config",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateStreamingDistribution, input, output)
	output = &UpdateStreamingDistributionOutput{}
	req.Data = output
	return
}

func (c *CloudFront) UpdateStreamingDistribution(input *UpdateStreamingDistributionInput) (output *UpdateStreamingDistributionOutput, err error) {
	req, out := c.UpdateStreamingDistributionRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateStreamingDistribution *aws.Operation

type AccessDenied struct {
	Message *string `type:"string"`

	metadataAccessDenied `json:"-", xml:"-"`
}

type metadataAccessDenied struct {
	SDKShapeTraits bool `type:"structure"`
}

type ActiveTrustedSigners struct {
	Enabled  *bool     `type:"boolean"`
	Items    []*Signer `locationNameList:"Signer" type:"list"`
	Quantity *int      `type:"integer"`

	metadataActiveTrustedSigners `json:"-", xml:"-"`
}

type metadataActiveTrustedSigners struct {
	SDKShapeTraits bool `type:"structure" required:"Enabled,Quantity"`
}

type Aliases struct {
	Items    []*string `locationNameList:"CNAME" type:"list"`
	Quantity *int      `type:"integer"`

	metadataAliases `json:"-", xml:"-"`
}

type metadataAliases struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type AllowedMethods struct {
	CachedMethods *CachedMethods `type:"structure"`
	Items         []*string      `locationNameList:"Method" type:"list"`
	Quantity      *int           `type:"integer"`

	metadataAllowedMethods `json:"-", xml:"-"`
}

type metadataAllowedMethods struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity,Items"`
}

type BatchTooLarge struct {
	Message *string `type:"string"`

	metadataBatchTooLarge `json:"-", xml:"-"`
}

type metadataBatchTooLarge struct {
	SDKShapeTraits bool `type:"structure"`
}

type CNAMEAlreadyExists struct {
	Message *string `type:"string"`

	metadataCNAMEAlreadyExists `json:"-", xml:"-"`
}

type metadataCNAMEAlreadyExists struct {
	SDKShapeTraits bool `type:"structure"`
}

type CacheBehavior struct {
	AllowedMethods       *AllowedMethods  `type:"structure"`
	ForwardedValues      *ForwardedValues `type:"structure"`
	MinTTL               *int64           `type:"long"`
	PathPattern          *string          `type:"string"`
	SmoothStreaming      *bool            `type:"boolean"`
	TargetOriginID       *string          `locationName:"TargetOriginId" type:"string"`
	TrustedSigners       *TrustedSigners  `type:"structure"`
	ViewerProtocolPolicy *string          `type:"string"`

	metadataCacheBehavior `json:"-", xml:"-"`
}

type metadataCacheBehavior struct {
	SDKShapeTraits bool `type:"structure" required:"PathPattern,TargetOriginId,ForwardedValues,TrustedSigners,ViewerProtocolPolicy,MinTTL"`
}

type CacheBehaviors struct {
	Items    []*CacheBehavior `locationNameList:"CacheBehavior" type:"list"`
	Quantity *int             `type:"integer"`

	metadataCacheBehaviors `json:"-", xml:"-"`
}

type metadataCacheBehaviors struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type CachedMethods struct {
	Items    []*string `locationNameList:"Method" type:"list"`
	Quantity *int      `type:"integer"`

	metadataCachedMethods `json:"-", xml:"-"`
}

type metadataCachedMethods struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity,Items"`
}

type CloudFrontOriginAccessIdentity struct {
	CloudFrontOriginAccessIdentityConfig *CloudFrontOriginAccessIdentityConfig `type:"structure"`
	ID                                   *string                               `locationName:"Id" type:"string"`
	S3CanonicalUserID                    *string                               `locationName:"S3CanonicalUserId" type:"string"`

	metadataCloudFrontOriginAccessIdentity `json:"-", xml:"-"`
}

type metadataCloudFrontOriginAccessIdentity struct {
	SDKShapeTraits bool `type:"structure" required:"Id,S3CanonicalUserId"`
}

type CloudFrontOriginAccessIdentityAlreadyExists struct {
	Message *string `type:"string"`

	metadataCloudFrontOriginAccessIdentityAlreadyExists `json:"-", xml:"-"`
}

type metadataCloudFrontOriginAccessIdentityAlreadyExists struct {
	SDKShapeTraits bool `type:"structure"`
}

type CloudFrontOriginAccessIdentityConfig struct {
	CallerReference *string `type:"string"`
	Comment         *string `type:"string"`

	metadataCloudFrontOriginAccessIdentityConfig `json:"-", xml:"-"`
}

type metadataCloudFrontOriginAccessIdentityConfig struct {
	SDKShapeTraits bool `type:"structure" required:"CallerReference,Comment"`
}

type CloudFrontOriginAccessIdentityInUse struct {
	Message *string `type:"string"`

	metadataCloudFrontOriginAccessIdentityInUse `json:"-", xml:"-"`
}

type metadataCloudFrontOriginAccessIdentityInUse struct {
	SDKShapeTraits bool `type:"structure"`
}

type CloudFrontOriginAccessIdentityList struct {
	IsTruncated *bool                                    `type:"boolean"`
	Items       []*CloudFrontOriginAccessIdentitySummary `locationNameList:"CloudFrontOriginAccessIdentitySummary" type:"list"`
	Marker      *string                                  `type:"string"`
	MaxItems    *int                                     `type:"integer"`
	NextMarker  *string                                  `type:"string"`
	Quantity    *int                                     `type:"integer"`

	metadataCloudFrontOriginAccessIdentityList `json:"-", xml:"-"`
}

type metadataCloudFrontOriginAccessIdentityList struct {
	SDKShapeTraits bool `type:"structure" required:"Marker,MaxItems,IsTruncated,Quantity"`
}

type CloudFrontOriginAccessIdentitySummary struct {
	Comment           *string `type:"string"`
	ID                *string `locationName:"Id" type:"string"`
	S3CanonicalUserID *string `locationName:"S3CanonicalUserId" type:"string"`

	metadataCloudFrontOriginAccessIdentitySummary `json:"-", xml:"-"`
}

type metadataCloudFrontOriginAccessIdentitySummary struct {
	SDKShapeTraits bool `type:"structure" required:"Id,S3CanonicalUserId,Comment"`
}

type CookieNames struct {
	Items    []*string `locationNameList:"Name" type:"list"`
	Quantity *int      `type:"integer"`

	metadataCookieNames `json:"-", xml:"-"`
}

type metadataCookieNames struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type CookiePreference struct {
	Forward          *string      `type:"string"`
	WhitelistedNames *CookieNames `type:"structure"`

	metadataCookiePreference `json:"-", xml:"-"`
}

type metadataCookiePreference struct {
	SDKShapeTraits bool `type:"structure" required:"Forward"`
}

type CreateCloudFrontOriginAccessIdentityInput struct {
	CloudFrontOriginAccessIdentityConfig *CloudFrontOriginAccessIdentityConfig `locationName:"CloudFrontOriginAccessIdentityConfig" type:"structure"`

	metadataCreateCloudFrontOriginAccessIdentityInput `json:"-", xml:"-"`
}

type metadataCreateCloudFrontOriginAccessIdentityInput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentityConfig" required:"CloudFrontOriginAccessIdentityConfig"`
}

type CreateCloudFrontOriginAccessIdentityOutput struct {
	CloudFrontOriginAccessIdentity *CloudFrontOriginAccessIdentity `type:"structure"`
	ETag                           *string                         `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`
	Location                       *string                         `location:"header" locationName:"Location" type:"string" json:"-" xml:"-"`

	metadataCreateCloudFrontOriginAccessIdentityOutput `json:"-", xml:"-"`
}

type metadataCreateCloudFrontOriginAccessIdentityOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentity"`
}

type CreateDistributionInput struct {
	DistributionConfig *DistributionConfig `locationName:"DistributionConfig" type:"structure"`

	metadataCreateDistributionInput `json:"-", xml:"-"`
}

type metadataCreateDistributionInput struct {
	SDKShapeTraits bool `type:"structure" payload:"DistributionConfig" required:"DistributionConfig"`
}

type CreateDistributionOutput struct {
	Distribution *Distribution `type:"structure"`
	ETag         *string       `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`
	Location     *string       `location:"header" locationName:"Location" type:"string" json:"-" xml:"-"`

	metadataCreateDistributionOutput `json:"-", xml:"-"`
}

type metadataCreateDistributionOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"Distribution"`
}

type CreateInvalidationInput struct {
	DistributionID    *string            `location:"uri" locationName:"DistributionId" type:"string" json:"-" xml:"-"`
	InvalidationBatch *InvalidationBatch `locationName:"InvalidationBatch" type:"structure"`

	metadataCreateInvalidationInput `json:"-", xml:"-"`
}

type metadataCreateInvalidationInput struct {
	SDKShapeTraits bool `type:"structure" payload:"InvalidationBatch" required:"DistributionId,InvalidationBatch"`
}

type CreateInvalidationOutput struct {
	Invalidation *Invalidation `type:"structure"`
	Location     *string       `location:"header" locationName:"Location" type:"string" json:"-" xml:"-"`

	metadataCreateInvalidationOutput `json:"-", xml:"-"`
}

type metadataCreateInvalidationOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"Invalidation"`
}

type CreateStreamingDistributionInput struct {
	StreamingDistributionConfig *StreamingDistributionConfig `locationName:"StreamingDistributionConfig" type:"structure"`

	metadataCreateStreamingDistributionInput `json:"-", xml:"-"`
}

type metadataCreateStreamingDistributionInput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistributionConfig" required:"StreamingDistributionConfig"`
}

type CreateStreamingDistributionOutput struct {
	ETag                  *string                `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`
	Location              *string                `location:"header" locationName:"Location" type:"string" json:"-" xml:"-"`
	StreamingDistribution *StreamingDistribution `type:"structure"`

	metadataCreateStreamingDistributionOutput `json:"-", xml:"-"`
}

type metadataCreateStreamingDistributionOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistribution"`
}

type CustomErrorResponse struct {
	ErrorCachingMinTTL *int64  `type:"long"`
	ErrorCode          *int    `type:"integer"`
	ResponseCode       *string `type:"string"`
	ResponsePagePath   *string `type:"string"`

	metadataCustomErrorResponse `json:"-", xml:"-"`
}

type metadataCustomErrorResponse struct {
	SDKShapeTraits bool `type:"structure" required:"ErrorCode"`
}

type CustomErrorResponses struct {
	Items    []*CustomErrorResponse `locationNameList:"CustomErrorResponse" type:"list"`
	Quantity *int                   `type:"integer"`

	metadataCustomErrorResponses `json:"-", xml:"-"`
}

type metadataCustomErrorResponses struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type CustomOriginConfig struct {
	HTTPPort             *int    `type:"integer"`
	HTTPSPort            *int    `type:"integer"`
	OriginProtocolPolicy *string `type:"string"`

	metadataCustomOriginConfig `json:"-", xml:"-"`
}

type metadataCustomOriginConfig struct {
	SDKShapeTraits bool `type:"structure" required:"HTTPPort,HTTPSPort,OriginProtocolPolicy"`
}

type DefaultCacheBehavior struct {
	AllowedMethods       *AllowedMethods  `type:"structure"`
	ForwardedValues      *ForwardedValues `type:"structure"`
	MinTTL               *int64           `type:"long"`
	SmoothStreaming      *bool            `type:"boolean"`
	TargetOriginID       *string          `locationName:"TargetOriginId" type:"string"`
	TrustedSigners       *TrustedSigners  `type:"structure"`
	ViewerProtocolPolicy *string          `type:"string"`

	metadataDefaultCacheBehavior `json:"-", xml:"-"`
}

type metadataDefaultCacheBehavior struct {
	SDKShapeTraits bool `type:"structure" required:"TargetOriginId,ForwardedValues,TrustedSigners,ViewerProtocolPolicy,MinTTL"`
}

type DeleteCloudFrontOriginAccessIdentityInput struct {
	ID      *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	IfMatch *string `location:"header" locationName:"If-Match" type:"string" json:"-" xml:"-"`

	metadataDeleteCloudFrontOriginAccessIdentityInput `json:"-", xml:"-"`
}

type metadataDeleteCloudFrontOriginAccessIdentityInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type DeleteDistributionInput struct {
	ID      *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	IfMatch *string `location:"header" locationName:"If-Match" type:"string" json:"-" xml:"-"`

	metadataDeleteDistributionInput `json:"-", xml:"-"`
}

type metadataDeleteDistributionInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type DeleteStreamingDistributionInput struct {
	ID      *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	IfMatch *string `location:"header" locationName:"If-Match" type:"string" json:"-" xml:"-"`

	metadataDeleteStreamingDistributionInput `json:"-", xml:"-"`
}

type metadataDeleteStreamingDistributionInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type Distribution struct {
	ActiveTrustedSigners          *ActiveTrustedSigners `type:"structure"`
	DistributionConfig            *DistributionConfig   `type:"structure"`
	DomainName                    *string               `type:"string"`
	ID                            *string               `locationName:"Id" type:"string"`
	InProgressInvalidationBatches *int                  `type:"integer"`
	LastModifiedTime              *time.Time            `type:"timestamp" timestampFormat:"iso8601"`
	Status                        *string               `type:"string"`

	metadataDistribution `json:"-", xml:"-"`
}

type metadataDistribution struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Status,LastModifiedTime,InProgressInvalidationBatches,DomainName,ActiveTrustedSigners,DistributionConfig"`
}

type DistributionAlreadyExists struct {
	Message *string `type:"string"`

	metadataDistributionAlreadyExists `json:"-", xml:"-"`
}

type metadataDistributionAlreadyExists struct {
	SDKShapeTraits bool `type:"structure"`
}

type DistributionConfig struct {
	Aliases              *Aliases              `type:"structure"`
	CacheBehaviors       *CacheBehaviors       `type:"structure"`
	CallerReference      *string               `type:"string"`
	Comment              *string               `type:"string"`
	CustomErrorResponses *CustomErrorResponses `type:"structure"`
	DefaultCacheBehavior *DefaultCacheBehavior `type:"structure"`
	DefaultRootObject    *string               `type:"string"`
	Enabled              *bool                 `type:"boolean"`
	Logging              *LoggingConfig        `type:"structure"`
	Origins              *Origins              `type:"structure"`
	PriceClass           *string               `type:"string"`
	Restrictions         *Restrictions         `type:"structure"`
	ViewerCertificate    *ViewerCertificate    `type:"structure"`

	metadataDistributionConfig `json:"-", xml:"-"`
}

type metadataDistributionConfig struct {
	SDKShapeTraits bool `type:"structure" required:"CallerReference,Origins,DefaultCacheBehavior,Comment,Enabled"`
}

type DistributionList struct {
	IsTruncated *bool                  `type:"boolean"`
	Items       []*DistributionSummary `locationNameList:"DistributionSummary" type:"list"`
	Marker      *string                `type:"string"`
	MaxItems    *int                   `type:"integer"`
	NextMarker  *string                `type:"string"`
	Quantity    *int                   `type:"integer"`

	metadataDistributionList `json:"-", xml:"-"`
}

type metadataDistributionList struct {
	SDKShapeTraits bool `type:"structure" required:"Marker,MaxItems,IsTruncated,Quantity"`
}

type DistributionNotDisabled struct {
	Message *string `type:"string"`

	metadataDistributionNotDisabled `json:"-", xml:"-"`
}

type metadataDistributionNotDisabled struct {
	SDKShapeTraits bool `type:"structure"`
}

type DistributionSummary struct {
	Aliases              *Aliases              `type:"structure"`
	CacheBehaviors       *CacheBehaviors       `type:"structure"`
	Comment              *string               `type:"string"`
	CustomErrorResponses *CustomErrorResponses `type:"structure"`
	DefaultCacheBehavior *DefaultCacheBehavior `type:"structure"`
	DomainName           *string               `type:"string"`
	Enabled              *bool                 `type:"boolean"`
	ID                   *string               `locationName:"Id" type:"string"`
	LastModifiedTime     *time.Time            `type:"timestamp" timestampFormat:"iso8601"`
	Origins              *Origins              `type:"structure"`
	PriceClass           *string               `type:"string"`
	Restrictions         *Restrictions         `type:"structure"`
	Status               *string               `type:"string"`
	ViewerCertificate    *ViewerCertificate    `type:"structure"`

	metadataDistributionSummary `json:"-", xml:"-"`
}

type metadataDistributionSummary struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Status,LastModifiedTime,DomainName,Aliases,Origins,DefaultCacheBehavior,CacheBehaviors,CustomErrorResponses,Comment,PriceClass,Enabled,ViewerCertificate,Restrictions"`
}

type ForwardedValues struct {
	Cookies     *CookiePreference `type:"structure"`
	Headers     *Headers          `type:"structure"`
	QueryString *bool             `type:"boolean"`

	metadataForwardedValues `json:"-", xml:"-"`
}

type metadataForwardedValues struct {
	SDKShapeTraits bool `type:"structure" required:"QueryString,Cookies"`
}

type GeoRestriction struct {
	Items           []*string `locationNameList:"Location" type:"list"`
	Quantity        *int      `type:"integer"`
	RestrictionType *string   `type:"string"`

	metadataGeoRestriction `json:"-", xml:"-"`
}

type metadataGeoRestriction struct {
	SDKShapeTraits bool `type:"structure" required:"RestrictionType,Quantity"`
}

type GetCloudFrontOriginAccessIdentityConfigInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetCloudFrontOriginAccessIdentityConfigInput `json:"-", xml:"-"`
}

type metadataGetCloudFrontOriginAccessIdentityConfigInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type GetCloudFrontOriginAccessIdentityConfigOutput struct {
	CloudFrontOriginAccessIdentityConfig *CloudFrontOriginAccessIdentityConfig `type:"structure"`
	ETag                                 *string                               `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`

	metadataGetCloudFrontOriginAccessIdentityConfigOutput `json:"-", xml:"-"`
}

type metadataGetCloudFrontOriginAccessIdentityConfigOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentityConfig"`
}

type GetCloudFrontOriginAccessIdentityInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetCloudFrontOriginAccessIdentityInput `json:"-", xml:"-"`
}

type metadataGetCloudFrontOriginAccessIdentityInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type GetCloudFrontOriginAccessIdentityOutput struct {
	CloudFrontOriginAccessIdentity *CloudFrontOriginAccessIdentity `type:"structure"`
	ETag                           *string                         `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`

	metadataGetCloudFrontOriginAccessIdentityOutput `json:"-", xml:"-"`
}

type metadataGetCloudFrontOriginAccessIdentityOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentity"`
}

type GetDistributionConfigInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetDistributionConfigInput `json:"-", xml:"-"`
}

type metadataGetDistributionConfigInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type GetDistributionConfigOutput struct {
	DistributionConfig *DistributionConfig `type:"structure"`
	ETag               *string             `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`

	metadataGetDistributionConfigOutput `json:"-", xml:"-"`
}

type metadataGetDistributionConfigOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"DistributionConfig"`
}

type GetDistributionInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetDistributionInput `json:"-", xml:"-"`
}

type metadataGetDistributionInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type GetDistributionOutput struct {
	Distribution *Distribution `type:"structure"`
	ETag         *string       `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`

	metadataGetDistributionOutput `json:"-", xml:"-"`
}

type metadataGetDistributionOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"Distribution"`
}

type GetInvalidationInput struct {
	DistributionID *string `location:"uri" locationName:"DistributionId" type:"string" json:"-" xml:"-"`
	ID             *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetInvalidationInput `json:"-", xml:"-"`
}

type metadataGetInvalidationInput struct {
	SDKShapeTraits bool `type:"structure" required:"DistributionId,Id"`
}

type GetInvalidationOutput struct {
	Invalidation *Invalidation `type:"structure"`

	metadataGetInvalidationOutput `json:"-", xml:"-"`
}

type metadataGetInvalidationOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"Invalidation"`
}

type GetStreamingDistributionConfigInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetStreamingDistributionConfigInput `json:"-", xml:"-"`
}

type metadataGetStreamingDistributionConfigInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type GetStreamingDistributionConfigOutput struct {
	ETag                        *string                      `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`
	StreamingDistributionConfig *StreamingDistributionConfig `type:"structure"`

	metadataGetStreamingDistributionConfigOutput `json:"-", xml:"-"`
}

type metadataGetStreamingDistributionConfigOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistributionConfig"`
}

type GetStreamingDistributionInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataGetStreamingDistributionInput `json:"-", xml:"-"`
}

type metadataGetStreamingDistributionInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id"`
}

type GetStreamingDistributionOutput struct {
	ETag                  *string                `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`
	StreamingDistribution *StreamingDistribution `type:"structure"`

	metadataGetStreamingDistributionOutput `json:"-", xml:"-"`
}

type metadataGetStreamingDistributionOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistribution"`
}

type Headers struct {
	Items    []*string `locationNameList:"Name" type:"list"`
	Quantity *int      `type:"integer"`

	metadataHeaders `json:"-", xml:"-"`
}

type metadataHeaders struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type IllegalUpdate struct {
	Message *string `type:"string"`

	metadataIllegalUpdate `json:"-", xml:"-"`
}

type metadataIllegalUpdate struct {
	SDKShapeTraits bool `type:"structure"`
}

type InconsistentQuantities struct {
	Message *string `type:"string"`

	metadataInconsistentQuantities `json:"-", xml:"-"`
}

type metadataInconsistentQuantities struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidArgument struct {
	Message *string `type:"string"`

	metadataInvalidArgument `json:"-", xml:"-"`
}

type metadataInvalidArgument struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidDefaultRootObject struct {
	Message *string `type:"string"`

	metadataInvalidDefaultRootObject `json:"-", xml:"-"`
}

type metadataInvalidDefaultRootObject struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidErrorCode struct {
	Message *string `type:"string"`

	metadataInvalidErrorCode `json:"-", xml:"-"`
}

type metadataInvalidErrorCode struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidForwardCookies struct {
	Message *string `type:"string"`

	metadataInvalidForwardCookies `json:"-", xml:"-"`
}

type metadataInvalidForwardCookies struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidGeoRestrictionParameter struct {
	Message *string `type:"string"`

	metadataInvalidGeoRestrictionParameter `json:"-", xml:"-"`
}

type metadataInvalidGeoRestrictionParameter struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidHeadersForS3Origin struct {
	Message *string `type:"string"`

	metadataInvalidHeadersForS3Origin `json:"-", xml:"-"`
}

type metadataInvalidHeadersForS3Origin struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidIfMatchVersion struct {
	Message *string `type:"string"`

	metadataInvalidIfMatchVersion `json:"-", xml:"-"`
}

type metadataInvalidIfMatchVersion struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidLocationCode struct {
	Message *string `type:"string"`

	metadataInvalidLocationCode `json:"-", xml:"-"`
}

type metadataInvalidLocationCode struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidOrigin struct {
	Message *string `type:"string"`

	metadataInvalidOrigin `json:"-", xml:"-"`
}

type metadataInvalidOrigin struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidOriginAccessIdentity struct {
	Message *string `type:"string"`

	metadataInvalidOriginAccessIdentity `json:"-", xml:"-"`
}

type metadataInvalidOriginAccessIdentity struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidProtocolSettings struct {
	Message *string `type:"string"`

	metadataInvalidProtocolSettings `json:"-", xml:"-"`
}

type metadataInvalidProtocolSettings struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidRelativePath struct {
	Message *string `type:"string"`

	metadataInvalidRelativePath `json:"-", xml:"-"`
}

type metadataInvalidRelativePath struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidRequiredProtocol struct {
	Message *string `type:"string"`

	metadataInvalidRequiredProtocol `json:"-", xml:"-"`
}

type metadataInvalidRequiredProtocol struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidResponseCode struct {
	Message *string `type:"string"`

	metadataInvalidResponseCode `json:"-", xml:"-"`
}

type metadataInvalidResponseCode struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidViewerCertificate struct {
	Message *string `type:"string"`

	metadataInvalidViewerCertificate `json:"-", xml:"-"`
}

type metadataInvalidViewerCertificate struct {
	SDKShapeTraits bool `type:"structure"`
}

type Invalidation struct {
	CreateTime        *time.Time         `type:"timestamp" timestampFormat:"iso8601"`
	ID                *string            `locationName:"Id" type:"string"`
	InvalidationBatch *InvalidationBatch `type:"structure"`
	Status            *string            `type:"string"`

	metadataInvalidation `json:"-", xml:"-"`
}

type metadataInvalidation struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Status,CreateTime,InvalidationBatch"`
}

type InvalidationBatch struct {
	CallerReference *string `type:"string"`
	Paths           *Paths  `type:"structure"`

	metadataInvalidationBatch `json:"-", xml:"-"`
}

type metadataInvalidationBatch struct {
	SDKShapeTraits bool `type:"structure" required:"Paths,CallerReference"`
}

type InvalidationList struct {
	IsTruncated *bool                  `type:"boolean"`
	Items       []*InvalidationSummary `locationNameList:"InvalidationSummary" type:"list"`
	Marker      *string                `type:"string"`
	MaxItems    *int                   `type:"integer"`
	NextMarker  *string                `type:"string"`
	Quantity    *int                   `type:"integer"`

	metadataInvalidationList `json:"-", xml:"-"`
}

type metadataInvalidationList struct {
	SDKShapeTraits bool `type:"structure" required:"Marker,MaxItems,IsTruncated,Quantity"`
}

type InvalidationSummary struct {
	CreateTime *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	ID         *string    `locationName:"Id" type:"string"`
	Status     *string    `type:"string"`

	metadataInvalidationSummary `json:"-", xml:"-"`
}

type metadataInvalidationSummary struct {
	SDKShapeTraits bool `type:"structure" required:"Id,CreateTime,Status"`
}

type KeyPairIDs struct {
	Items    []*string `locationNameList:"KeyPairId" type:"list"`
	Quantity *int      `type:"integer"`

	metadataKeyPairIDs `json:"-", xml:"-"`
}

type metadataKeyPairIDs struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type ListCloudFrontOriginAccessIdentitiesInput struct {
	Marker   *string `location:"querystring" locationName:"Marker" type:"string" json:"-" xml:"-"`
	MaxItems *string `location:"querystring" locationName:"MaxItems" type:"string" json:"-" xml:"-"`

	metadataListCloudFrontOriginAccessIdentitiesInput `json:"-", xml:"-"`
}

type metadataListCloudFrontOriginAccessIdentitiesInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListCloudFrontOriginAccessIdentitiesOutput struct {
	CloudFrontOriginAccessIdentityList *CloudFrontOriginAccessIdentityList `type:"structure"`

	metadataListCloudFrontOriginAccessIdentitiesOutput `json:"-", xml:"-"`
}

type metadataListCloudFrontOriginAccessIdentitiesOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentityList"`
}

type ListDistributionsInput struct {
	Marker   *string `location:"querystring" locationName:"Marker" type:"string" json:"-" xml:"-"`
	MaxItems *string `location:"querystring" locationName:"MaxItems" type:"string" json:"-" xml:"-"`

	metadataListDistributionsInput `json:"-", xml:"-"`
}

type metadataListDistributionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListDistributionsOutput struct {
	DistributionList *DistributionList `type:"structure"`

	metadataListDistributionsOutput `json:"-", xml:"-"`
}

type metadataListDistributionsOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"DistributionList"`
}

type ListInvalidationsInput struct {
	DistributionID *string `location:"uri" locationName:"DistributionId" type:"string" json:"-" xml:"-"`
	Marker         *string `location:"querystring" locationName:"Marker" type:"string" json:"-" xml:"-"`
	MaxItems       *string `location:"querystring" locationName:"MaxItems" type:"string" json:"-" xml:"-"`

	metadataListInvalidationsInput `json:"-", xml:"-"`
}

type metadataListInvalidationsInput struct {
	SDKShapeTraits bool `type:"structure" required:"DistributionId"`
}

type ListInvalidationsOutput struct {
	InvalidationList *InvalidationList `type:"structure"`

	metadataListInvalidationsOutput `json:"-", xml:"-"`
}

type metadataListInvalidationsOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"InvalidationList"`
}

type ListStreamingDistributionsInput struct {
	Marker   *string `location:"querystring" locationName:"Marker" type:"string" json:"-" xml:"-"`
	MaxItems *string `location:"querystring" locationName:"MaxItems" type:"string" json:"-" xml:"-"`

	metadataListStreamingDistributionsInput `json:"-", xml:"-"`
}

type metadataListStreamingDistributionsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListStreamingDistributionsOutput struct {
	StreamingDistributionList *StreamingDistributionList `type:"structure"`

	metadataListStreamingDistributionsOutput `json:"-", xml:"-"`
}

type metadataListStreamingDistributionsOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistributionList"`
}

type LoggingConfig struct {
	Bucket         *string `type:"string"`
	Enabled        *bool   `type:"boolean"`
	IncludeCookies *bool   `type:"boolean"`
	Prefix         *string `type:"string"`

	metadataLoggingConfig `json:"-", xml:"-"`
}

type metadataLoggingConfig struct {
	SDKShapeTraits bool `type:"structure" required:"Enabled,IncludeCookies,Bucket,Prefix"`
}

type MissingBody struct {
	Message *string `type:"string"`

	metadataMissingBody `json:"-", xml:"-"`
}

type metadataMissingBody struct {
	SDKShapeTraits bool `type:"structure"`
}

type NoSuchCloudFrontOriginAccessIdentity struct {
	Message *string `type:"string"`

	metadataNoSuchCloudFrontOriginAccessIdentity `json:"-", xml:"-"`
}

type metadataNoSuchCloudFrontOriginAccessIdentity struct {
	SDKShapeTraits bool `type:"structure"`
}

type NoSuchDistribution struct {
	Message *string `type:"string"`

	metadataNoSuchDistribution `json:"-", xml:"-"`
}

type metadataNoSuchDistribution struct {
	SDKShapeTraits bool `type:"structure"`
}

type NoSuchInvalidation struct {
	Message *string `type:"string"`

	metadataNoSuchInvalidation `json:"-", xml:"-"`
}

type metadataNoSuchInvalidation struct {
	SDKShapeTraits bool `type:"structure"`
}

type NoSuchOrigin struct {
	Message *string `type:"string"`

	metadataNoSuchOrigin `json:"-", xml:"-"`
}

type metadataNoSuchOrigin struct {
	SDKShapeTraits bool `type:"structure"`
}

type NoSuchStreamingDistribution struct {
	Message *string `type:"string"`

	metadataNoSuchStreamingDistribution `json:"-", xml:"-"`
}

type metadataNoSuchStreamingDistribution struct {
	SDKShapeTraits bool `type:"structure"`
}

type Origin struct {
	CustomOriginConfig *CustomOriginConfig `type:"structure"`
	DomainName         *string             `type:"string"`
	ID                 *string             `locationName:"Id" type:"string"`
	OriginPath         *string             `type:"string"`
	S3OriginConfig     *S3OriginConfig     `type:"structure"`

	metadataOrigin `json:"-", xml:"-"`
}

type metadataOrigin struct {
	SDKShapeTraits bool `type:"structure" required:"Id,DomainName"`
}

type Origins struct {
	Items    []*Origin `locationNameList:"Origin" type:"list"`
	Quantity *int      `type:"integer"`

	metadataOrigins `json:"-", xml:"-"`
}

type metadataOrigins struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type Paths struct {
	Items    []*string `locationNameList:"Path" type:"list"`
	Quantity *int      `type:"integer"`

	metadataPaths `json:"-", xml:"-"`
}

type metadataPaths struct {
	SDKShapeTraits bool `type:"structure" required:"Quantity"`
}

type PreconditionFailed struct {
	Message *string `type:"string"`

	metadataPreconditionFailed `json:"-", xml:"-"`
}

type metadataPreconditionFailed struct {
	SDKShapeTraits bool `type:"structure"`
}

type Restrictions struct {
	GeoRestriction *GeoRestriction `type:"structure"`

	metadataRestrictions `json:"-", xml:"-"`
}

type metadataRestrictions struct {
	SDKShapeTraits bool `type:"structure" required:"GeoRestriction"`
}

type S3Origin struct {
	DomainName           *string `type:"string"`
	OriginAccessIdentity *string `type:"string"`

	metadataS3Origin `json:"-", xml:"-"`
}

type metadataS3Origin struct {
	SDKShapeTraits bool `type:"structure" required:"DomainName,OriginAccessIdentity"`
}

type S3OriginConfig struct {
	OriginAccessIdentity *string `type:"string"`

	metadataS3OriginConfig `json:"-", xml:"-"`
}

type metadataS3OriginConfig struct {
	SDKShapeTraits bool `type:"structure" required:"OriginAccessIdentity"`
}

type Signer struct {
	AWSAccountNumber *string     `locationName:"AwsAccountNumber" type:"string"`
	KeyPairIDs       *KeyPairIDs `locationName:"KeyPairIds" type:"structure"`

	metadataSigner `json:"-", xml:"-"`
}

type metadataSigner struct {
	SDKShapeTraits bool `type:"structure"`
}

type StreamingDistribution struct {
	ActiveTrustedSigners        *ActiveTrustedSigners        `type:"structure"`
	DomainName                  *string                      `type:"string"`
	ID                          *string                      `locationName:"Id" type:"string"`
	LastModifiedTime            *time.Time                   `type:"timestamp" timestampFormat:"iso8601"`
	Status                      *string                      `type:"string"`
	StreamingDistributionConfig *StreamingDistributionConfig `type:"structure"`

	metadataStreamingDistribution `json:"-", xml:"-"`
}

type metadataStreamingDistribution struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Status,DomainName,ActiveTrustedSigners,StreamingDistributionConfig"`
}

type StreamingDistributionAlreadyExists struct {
	Message *string `type:"string"`

	metadataStreamingDistributionAlreadyExists `json:"-", xml:"-"`
}

type metadataStreamingDistributionAlreadyExists struct {
	SDKShapeTraits bool `type:"structure"`
}

type StreamingDistributionConfig struct {
	Aliases         *Aliases                `type:"structure"`
	CallerReference *string                 `type:"string"`
	Comment         *string                 `type:"string"`
	Enabled         *bool                   `type:"boolean"`
	Logging         *StreamingLoggingConfig `type:"structure"`
	PriceClass      *string                 `type:"string"`
	S3Origin        *S3Origin               `type:"structure"`
	TrustedSigners  *TrustedSigners         `type:"structure"`

	metadataStreamingDistributionConfig `json:"-", xml:"-"`
}

type metadataStreamingDistributionConfig struct {
	SDKShapeTraits bool `type:"structure" required:"CallerReference,S3Origin,Comment,TrustedSigners,Enabled"`
}

type StreamingDistributionList struct {
	IsTruncated *bool                           `type:"boolean"`
	Items       []*StreamingDistributionSummary `locationNameList:"StreamingDistributionSummary" type:"list"`
	Marker      *string                         `type:"string"`
	MaxItems    *int                            `type:"integer"`
	NextMarker  *string                         `type:"string"`
	Quantity    *int                            `type:"integer"`

	metadataStreamingDistributionList `json:"-", xml:"-"`
}

type metadataStreamingDistributionList struct {
	SDKShapeTraits bool `type:"structure" required:"Marker,MaxItems,IsTruncated,Quantity"`
}

type StreamingDistributionNotDisabled struct {
	Message *string `type:"string"`

	metadataStreamingDistributionNotDisabled `json:"-", xml:"-"`
}

type metadataStreamingDistributionNotDisabled struct {
	SDKShapeTraits bool `type:"structure"`
}

type StreamingDistributionSummary struct {
	Aliases          *Aliases        `type:"structure"`
	Comment          *string         `type:"string"`
	DomainName       *string         `type:"string"`
	Enabled          *bool           `type:"boolean"`
	ID               *string         `locationName:"Id" type:"string"`
	LastModifiedTime *time.Time      `type:"timestamp" timestampFormat:"iso8601"`
	PriceClass       *string         `type:"string"`
	S3Origin         *S3Origin       `type:"structure"`
	Status           *string         `type:"string"`
	TrustedSigners   *TrustedSigners `type:"structure"`

	metadataStreamingDistributionSummary `json:"-", xml:"-"`
}

type metadataStreamingDistributionSummary struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Status,LastModifiedTime,DomainName,S3Origin,Aliases,TrustedSigners,Comment,PriceClass,Enabled"`
}

type StreamingLoggingConfig struct {
	Bucket  *string `type:"string"`
	Enabled *bool   `type:"boolean"`
	Prefix  *string `type:"string"`

	metadataStreamingLoggingConfig `json:"-", xml:"-"`
}

type metadataStreamingLoggingConfig struct {
	SDKShapeTraits bool `type:"structure" required:"Enabled,Bucket,Prefix"`
}

type TooManyCacheBehaviors struct {
	Message *string `type:"string"`

	metadataTooManyCacheBehaviors `json:"-", xml:"-"`
}

type metadataTooManyCacheBehaviors struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyCertificates struct {
	Message *string `type:"string"`

	metadataTooManyCertificates `json:"-", xml:"-"`
}

type metadataTooManyCertificates struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyCloudFrontOriginAccessIdentities struct {
	Message *string `type:"string"`

	metadataTooManyCloudFrontOriginAccessIdentities `json:"-", xml:"-"`
}

type metadataTooManyCloudFrontOriginAccessIdentities struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyCookieNamesInWhiteList struct {
	Message *string `type:"string"`

	metadataTooManyCookieNamesInWhiteList `json:"-", xml:"-"`
}

type metadataTooManyCookieNamesInWhiteList struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyDistributionCNAMEs struct {
	Message *string `type:"string"`

	metadataTooManyDistributionCNAMEs `json:"-", xml:"-"`
}

type metadataTooManyDistributionCNAMEs struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyDistributions struct {
	Message *string `type:"string"`

	metadataTooManyDistributions `json:"-", xml:"-"`
}

type metadataTooManyDistributions struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyHeadersInForwardedValues struct {
	Message *string `type:"string"`

	metadataTooManyHeadersInForwardedValues `json:"-", xml:"-"`
}

type metadataTooManyHeadersInForwardedValues struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyInvalidationsInProgress struct {
	Message *string `type:"string"`

	metadataTooManyInvalidationsInProgress `json:"-", xml:"-"`
}

type metadataTooManyInvalidationsInProgress struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyOrigins struct {
	Message *string `type:"string"`

	metadataTooManyOrigins `json:"-", xml:"-"`
}

type metadataTooManyOrigins struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyStreamingDistributionCNAMEs struct {
	Message *string `type:"string"`

	metadataTooManyStreamingDistributionCNAMEs `json:"-", xml:"-"`
}

type metadataTooManyStreamingDistributionCNAMEs struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyStreamingDistributions struct {
	Message *string `type:"string"`

	metadataTooManyStreamingDistributions `json:"-", xml:"-"`
}

type metadataTooManyStreamingDistributions struct {
	SDKShapeTraits bool `type:"structure"`
}

type TooManyTrustedSigners struct {
	Message *string `type:"string"`

	metadataTooManyTrustedSigners `json:"-", xml:"-"`
}

type metadataTooManyTrustedSigners struct {
	SDKShapeTraits bool `type:"structure"`
}

type TrustedSignerDoesNotExist struct {
	Message *string `type:"string"`

	metadataTrustedSignerDoesNotExist `json:"-", xml:"-"`
}

type metadataTrustedSignerDoesNotExist struct {
	SDKShapeTraits bool `type:"structure"`
}

type TrustedSigners struct {
	Enabled  *bool     `type:"boolean"`
	Items    []*string `locationNameList:"AwsAccountNumber" type:"list"`
	Quantity *int      `type:"integer"`

	metadataTrustedSigners `json:"-", xml:"-"`
}

type metadataTrustedSigners struct {
	SDKShapeTraits bool `type:"structure" required:"Enabled,Quantity"`
}

type UpdateCloudFrontOriginAccessIdentityInput struct {
	CloudFrontOriginAccessIdentityConfig *CloudFrontOriginAccessIdentityConfig `locationName:"CloudFrontOriginAccessIdentityConfig" type:"structure"`
	ID                                   *string                               `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	IfMatch                              *string                               `location:"header" locationName:"If-Match" type:"string" json:"-" xml:"-"`

	metadataUpdateCloudFrontOriginAccessIdentityInput `json:"-", xml:"-"`
}

type metadataUpdateCloudFrontOriginAccessIdentityInput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentityConfig" required:"CloudFrontOriginAccessIdentityConfig,Id"`
}

type UpdateCloudFrontOriginAccessIdentityOutput struct {
	CloudFrontOriginAccessIdentity *CloudFrontOriginAccessIdentity `type:"structure"`
	ETag                           *string                         `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`

	metadataUpdateCloudFrontOriginAccessIdentityOutput `json:"-", xml:"-"`
}

type metadataUpdateCloudFrontOriginAccessIdentityOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"CloudFrontOriginAccessIdentity"`
}

type UpdateDistributionInput struct {
	DistributionConfig *DistributionConfig `locationName:"DistributionConfig" type:"structure"`
	ID                 *string             `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	IfMatch            *string             `location:"header" locationName:"If-Match" type:"string" json:"-" xml:"-"`

	metadataUpdateDistributionInput `json:"-", xml:"-"`
}

type metadataUpdateDistributionInput struct {
	SDKShapeTraits bool `type:"structure" payload:"DistributionConfig" required:"DistributionConfig,Id"`
}

type UpdateDistributionOutput struct {
	Distribution *Distribution `type:"structure"`
	ETag         *string       `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`

	metadataUpdateDistributionOutput `json:"-", xml:"-"`
}

type metadataUpdateDistributionOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"Distribution"`
}

type UpdateStreamingDistributionInput struct {
	ID                          *string                      `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	IfMatch                     *string                      `location:"header" locationName:"If-Match" type:"string" json:"-" xml:"-"`
	StreamingDistributionConfig *StreamingDistributionConfig `locationName:"StreamingDistributionConfig" type:"structure"`

	metadataUpdateStreamingDistributionInput `json:"-", xml:"-"`
}

type metadataUpdateStreamingDistributionInput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistributionConfig" required:"StreamingDistributionConfig,Id"`
}

type UpdateStreamingDistributionOutput struct {
	ETag                  *string                `location:"header" locationName:"ETag" type:"string" json:"-" xml:"-"`
	StreamingDistribution *StreamingDistribution `type:"structure"`

	metadataUpdateStreamingDistributionOutput `json:"-", xml:"-"`
}

type metadataUpdateStreamingDistributionOutput struct {
	SDKShapeTraits bool `type:"structure" payload:"StreamingDistribution"`
}

type ViewerCertificate struct {
	CloudFrontDefaultCertificate *bool   `type:"boolean"`
	IAMCertificateID             *string `locationName:"IAMCertificateId" type:"string"`
	MinimumProtocolVersion       *string `type:"string"`
	SSLSupportMethod             *string `type:"string"`

	metadataViewerCertificate `json:"-", xml:"-"`
}

type metadataViewerCertificate struct {
	SDKShapeTraits bool `type:"structure"`
}