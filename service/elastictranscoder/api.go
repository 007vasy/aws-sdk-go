package elastictranscoder

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
)

// CancelJobRequest generates a request for the CancelJob operation.
func (c *ElasticTranscoder) CancelJobRequest(input *CancelJobInput) (req *aws.Request, output *CancelJobOutput) {
	if opCancelJob == nil {
		opCancelJob = &aws.Operation{
			Name:       "CancelJob",
			HTTPMethod: "DELETE",
			HTTPPath:   "/2012-09-25/jobs/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opCancelJob, input, output)
	output = &CancelJobOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) CancelJob(input *CancelJobInput) (output *CancelJobOutput, err error) {
	req, out := c.CancelJobRequest(input)
	output = out
	err = req.Send()
	return
}

var opCancelJob *aws.Operation

// CreateJobRequest generates a request for the CreateJob operation.
func (c *ElasticTranscoder) CreateJobRequest(input *CreateJobInput) (req *aws.Request, output *CreateJobOutput) {
	if opCreateJob == nil {
		opCreateJob = &aws.Operation{
			Name:       "CreateJob",
			HTTPMethod: "POST",
			HTTPPath:   "/2012-09-25/jobs",
		}
	}

	req = aws.NewRequest(c.Service, opCreateJob, input, output)
	output = &CreateJobOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) CreateJob(input *CreateJobInput) (output *CreateJobOutput, err error) {
	req, out := c.CreateJobRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateJob *aws.Operation

// CreatePipelineRequest generates a request for the CreatePipeline operation.
func (c *ElasticTranscoder) CreatePipelineRequest(input *CreatePipelineInput) (req *aws.Request, output *CreatePipelineOutput) {
	if opCreatePipeline == nil {
		opCreatePipeline = &aws.Operation{
			Name:       "CreatePipeline",
			HTTPMethod: "POST",
			HTTPPath:   "/2012-09-25/pipelines",
		}
	}

	req = aws.NewRequest(c.Service, opCreatePipeline, input, output)
	output = &CreatePipelineOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) CreatePipeline(input *CreatePipelineInput) (output *CreatePipelineOutput, err error) {
	req, out := c.CreatePipelineRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreatePipeline *aws.Operation

// CreatePresetRequest generates a request for the CreatePreset operation.
func (c *ElasticTranscoder) CreatePresetRequest(input *CreatePresetInput) (req *aws.Request, output *CreatePresetOutput) {
	if opCreatePreset == nil {
		opCreatePreset = &aws.Operation{
			Name:       "CreatePreset",
			HTTPMethod: "POST",
			HTTPPath:   "/2012-09-25/presets",
		}
	}

	req = aws.NewRequest(c.Service, opCreatePreset, input, output)
	output = &CreatePresetOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) CreatePreset(input *CreatePresetInput) (output *CreatePresetOutput, err error) {
	req, out := c.CreatePresetRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreatePreset *aws.Operation

// DeletePipelineRequest generates a request for the DeletePipeline operation.
func (c *ElasticTranscoder) DeletePipelineRequest(input *DeletePipelineInput) (req *aws.Request, output *DeletePipelineOutput) {
	if opDeletePipeline == nil {
		opDeletePipeline = &aws.Operation{
			Name:       "DeletePipeline",
			HTTPMethod: "DELETE",
			HTTPPath:   "/2012-09-25/pipelines/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opDeletePipeline, input, output)
	output = &DeletePipelineOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) DeletePipeline(input *DeletePipelineInput) (output *DeletePipelineOutput, err error) {
	req, out := c.DeletePipelineRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeletePipeline *aws.Operation

// DeletePresetRequest generates a request for the DeletePreset operation.
func (c *ElasticTranscoder) DeletePresetRequest(input *DeletePresetInput) (req *aws.Request, output *DeletePresetOutput) {
	if opDeletePreset == nil {
		opDeletePreset = &aws.Operation{
			Name:       "DeletePreset",
			HTTPMethod: "DELETE",
			HTTPPath:   "/2012-09-25/presets/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opDeletePreset, input, output)
	output = &DeletePresetOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) DeletePreset(input *DeletePresetInput) (output *DeletePresetOutput, err error) {
	req, out := c.DeletePresetRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeletePreset *aws.Operation

// ListJobsByPipelineRequest generates a request for the ListJobsByPipeline operation.
func (c *ElasticTranscoder) ListJobsByPipelineRequest(input *ListJobsByPipelineInput) (req *aws.Request, output *ListJobsByPipelineOutput) {
	if opListJobsByPipeline == nil {
		opListJobsByPipeline = &aws.Operation{
			Name:       "ListJobsByPipeline",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/jobsByPipeline/{PipelineId}",
		}
	}

	req = aws.NewRequest(c.Service, opListJobsByPipeline, input, output)
	output = &ListJobsByPipelineOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ListJobsByPipeline(input *ListJobsByPipelineInput) (output *ListJobsByPipelineOutput, err error) {
	req, out := c.ListJobsByPipelineRequest(input)
	output = out
	err = req.Send()
	return
}

var opListJobsByPipeline *aws.Operation

// ListJobsByStatusRequest generates a request for the ListJobsByStatus operation.
func (c *ElasticTranscoder) ListJobsByStatusRequest(input *ListJobsByStatusInput) (req *aws.Request, output *ListJobsByStatusOutput) {
	if opListJobsByStatus == nil {
		opListJobsByStatus = &aws.Operation{
			Name:       "ListJobsByStatus",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/jobsByStatus/{Status}",
		}
	}

	req = aws.NewRequest(c.Service, opListJobsByStatus, input, output)
	output = &ListJobsByStatusOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ListJobsByStatus(input *ListJobsByStatusInput) (output *ListJobsByStatusOutput, err error) {
	req, out := c.ListJobsByStatusRequest(input)
	output = out
	err = req.Send()
	return
}

var opListJobsByStatus *aws.Operation

// ListPipelinesRequest generates a request for the ListPipelines operation.
func (c *ElasticTranscoder) ListPipelinesRequest(input *ListPipelinesInput) (req *aws.Request, output *ListPipelinesOutput) {
	if opListPipelines == nil {
		opListPipelines = &aws.Operation{
			Name:       "ListPipelines",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/pipelines",
		}
	}

	req = aws.NewRequest(c.Service, opListPipelines, input, output)
	output = &ListPipelinesOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ListPipelines(input *ListPipelinesInput) (output *ListPipelinesOutput, err error) {
	req, out := c.ListPipelinesRequest(input)
	output = out
	err = req.Send()
	return
}

var opListPipelines *aws.Operation

// ListPresetsRequest generates a request for the ListPresets operation.
func (c *ElasticTranscoder) ListPresetsRequest(input *ListPresetsInput) (req *aws.Request, output *ListPresetsOutput) {
	if opListPresets == nil {
		opListPresets = &aws.Operation{
			Name:       "ListPresets",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/presets",
		}
	}

	req = aws.NewRequest(c.Service, opListPresets, input, output)
	output = &ListPresetsOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ListPresets(input *ListPresetsInput) (output *ListPresetsOutput, err error) {
	req, out := c.ListPresetsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListPresets *aws.Operation

// ReadJobRequest generates a request for the ReadJob operation.
func (c *ElasticTranscoder) ReadJobRequest(input *ReadJobInput) (req *aws.Request, output *ReadJobOutput) {
	if opReadJob == nil {
		opReadJob = &aws.Operation{
			Name:       "ReadJob",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/jobs/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opReadJob, input, output)
	output = &ReadJobOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ReadJob(input *ReadJobInput) (output *ReadJobOutput, err error) {
	req, out := c.ReadJobRequest(input)
	output = out
	err = req.Send()
	return
}

var opReadJob *aws.Operation

// ReadPipelineRequest generates a request for the ReadPipeline operation.
func (c *ElasticTranscoder) ReadPipelineRequest(input *ReadPipelineInput) (req *aws.Request, output *ReadPipelineOutput) {
	if opReadPipeline == nil {
		opReadPipeline = &aws.Operation{
			Name:       "ReadPipeline",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/pipelines/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opReadPipeline, input, output)
	output = &ReadPipelineOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ReadPipeline(input *ReadPipelineInput) (output *ReadPipelineOutput, err error) {
	req, out := c.ReadPipelineRequest(input)
	output = out
	err = req.Send()
	return
}

var opReadPipeline *aws.Operation

// ReadPresetRequest generates a request for the ReadPreset operation.
func (c *ElasticTranscoder) ReadPresetRequest(input *ReadPresetInput) (req *aws.Request, output *ReadPresetOutput) {
	if opReadPreset == nil {
		opReadPreset = &aws.Operation{
			Name:       "ReadPreset",
			HTTPMethod: "GET",
			HTTPPath:   "/2012-09-25/presets/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opReadPreset, input, output)
	output = &ReadPresetOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) ReadPreset(input *ReadPresetInput) (output *ReadPresetOutput, err error) {
	req, out := c.ReadPresetRequest(input)
	output = out
	err = req.Send()
	return
}

var opReadPreset *aws.Operation

// TestRoleRequest generates a request for the TestRole operation.
func (c *ElasticTranscoder) TestRoleRequest(input *TestRoleInput) (req *aws.Request, output *TestRoleOutput) {
	if opTestRole == nil {
		opTestRole = &aws.Operation{
			Name:       "TestRole",
			HTTPMethod: "POST",
			HTTPPath:   "/2012-09-25/roleTests",
		}
	}

	req = aws.NewRequest(c.Service, opTestRole, input, output)
	output = &TestRoleOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) TestRole(input *TestRoleInput) (output *TestRoleOutput, err error) {
	req, out := c.TestRoleRequest(input)
	output = out
	err = req.Send()
	return
}

var opTestRole *aws.Operation

// UpdatePipelineRequest generates a request for the UpdatePipeline operation.
func (c *ElasticTranscoder) UpdatePipelineRequest(input *UpdatePipelineInput) (req *aws.Request, output *UpdatePipelineOutput) {
	if opUpdatePipeline == nil {
		opUpdatePipeline = &aws.Operation{
			Name:       "UpdatePipeline",
			HTTPMethod: "PUT",
			HTTPPath:   "/2012-09-25/pipelines/{Id}",
		}
	}

	req = aws.NewRequest(c.Service, opUpdatePipeline, input, output)
	output = &UpdatePipelineOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) UpdatePipeline(input *UpdatePipelineInput) (output *UpdatePipelineOutput, err error) {
	req, out := c.UpdatePipelineRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdatePipeline *aws.Operation

// UpdatePipelineNotificationsRequest generates a request for the UpdatePipelineNotifications operation.
func (c *ElasticTranscoder) UpdatePipelineNotificationsRequest(input *UpdatePipelineNotificationsInput) (req *aws.Request, output *UpdatePipelineNotificationsOutput) {
	if opUpdatePipelineNotifications == nil {
		opUpdatePipelineNotifications = &aws.Operation{
			Name:       "UpdatePipelineNotifications",
			HTTPMethod: "POST",
			HTTPPath:   "/2012-09-25/pipelines/{Id}/notifications",
		}
	}

	req = aws.NewRequest(c.Service, opUpdatePipelineNotifications, input, output)
	output = &UpdatePipelineNotificationsOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) UpdatePipelineNotifications(input *UpdatePipelineNotificationsInput) (output *UpdatePipelineNotificationsOutput, err error) {
	req, out := c.UpdatePipelineNotificationsRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdatePipelineNotifications *aws.Operation

// UpdatePipelineStatusRequest generates a request for the UpdatePipelineStatus operation.
func (c *ElasticTranscoder) UpdatePipelineStatusRequest(input *UpdatePipelineStatusInput) (req *aws.Request, output *UpdatePipelineStatusOutput) {
	if opUpdatePipelineStatus == nil {
		opUpdatePipelineStatus = &aws.Operation{
			Name:       "UpdatePipelineStatus",
			HTTPMethod: "POST",
			HTTPPath:   "/2012-09-25/pipelines/{Id}/status",
		}
	}

	req = aws.NewRequest(c.Service, opUpdatePipelineStatus, input, output)
	output = &UpdatePipelineStatusOutput{}
	req.Data = output
	return
}

func (c *ElasticTranscoder) UpdatePipelineStatus(input *UpdatePipelineStatusInput) (output *UpdatePipelineStatusOutput, err error) {
	req, out := c.UpdatePipelineStatusRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdatePipelineStatus *aws.Operation

type Artwork struct {
	AlbumArtFormat *string     `type:"string" json:",omitempty"`
	Encryption     *Encryption `type:"structure" json:",omitempty"`
	InputKey       *string     `type:"string" json:",omitempty"`
	MaxHeight      *string     `type:"string" json:",omitempty"`
	MaxWidth       *string     `type:"string" json:",omitempty"`
	PaddingPolicy  *string     `type:"string" json:",omitempty"`
	SizingPolicy   *string     `type:"string" json:",omitempty"`

	metadataArtwork `json:"-", xml:"-"`
}

type metadataArtwork struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AudioCodecOptions struct {
	Profile *string `type:"string" json:",omitempty"`

	metadataAudioCodecOptions `json:"-", xml:"-"`
}

type metadataAudioCodecOptions struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type AudioParameters struct {
	BitRate      *string            `type:"string" json:",omitempty"`
	Channels     *string            `type:"string" json:",omitempty"`
	Codec        *string            `type:"string" json:",omitempty"`
	CodecOptions *AudioCodecOptions `type:"structure" json:",omitempty"`
	SampleRate   *string            `type:"string" json:",omitempty"`

	metadataAudioParameters `json:"-", xml:"-"`
}

type metadataAudioParameters struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CancelJobInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataCancelJobInput `json:"-", xml:"-"`
}

type metadataCancelJobInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type CancelJobOutput struct {
	metadataCancelJobOutput `json:"-", xml:"-"`
}

type metadataCancelJobOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CaptionFormat struct {
	Encryption *Encryption `type:"structure" json:",omitempty"`
	Format     *string     `type:"string" json:",omitempty"`
	Pattern    *string     `type:"string" json:",omitempty"`

	metadataCaptionFormat `json:"-", xml:"-"`
}

type metadataCaptionFormat struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CaptionSource struct {
	Encryption *Encryption `type:"structure" json:",omitempty"`
	Key        *string     `type:"string" json:",omitempty"`
	Label      *string     `type:"string" json:",omitempty"`
	Language   *string     `type:"string" json:",omitempty"`
	TimeOffset *string     `type:"string" json:",omitempty"`

	metadataCaptionSource `json:"-", xml:"-"`
}

type metadataCaptionSource struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Captions struct {
	CaptionFormats []*CaptionFormat `type:"list" json:",omitempty"`
	CaptionSources []*CaptionSource `type:"list" json:",omitempty"`
	MergePolicy    *string          `type:"string" json:",omitempty"`

	metadataCaptions `json:"-", xml:"-"`
}

type metadataCaptions struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Clip struct {
	TimeSpan *TimeSpan `type:"structure" json:",omitempty"`

	metadataClip `json:"-", xml:"-"`
}

type metadataClip struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateJobInput struct {
	Input           *JobInput            `type:"structure" json:",omitempty"`
	Output          *CreateJobOutput     `type:"structure" json:",omitempty"`
	OutputKeyPrefix *string              `type:"string" json:",omitempty"`
	Outputs         []*CreateJobOutput   `type:"list" json:",omitempty"`
	PipelineID      *string              `locationName:"PipelineId" type:"string" json:"PipelineId,omitempty"`
	Playlists       []*CreateJobPlaylist `type:"list" json:",omitempty"`
	UserMetadata    *map[string]*string  `type:"map" json:",omitempty"`

	metadataCreateJobInput `json:"-", xml:"-"`
}

type metadataCreateJobInput struct {
	SDKShapeTraits bool `type:"structure" required:"PipelineId,Input" json:",omitempty"`
}

type CreateJobOutput struct {
	Job *Job `type:"structure" json:",omitempty"`

	metadataCreateJobOutput `json:"-", xml:"-"`
}

type metadataCreateJobOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreateJobPlaylist struct {
	Format               *string               `type:"string" json:",omitempty"`
	HLSContentProtection *HLSContentProtection `locationName:"HlsContentProtection" type:"structure" json:"HlsContentProtection,omitempty"`
	Name                 *string               `type:"string" json:",omitempty"`
	OutputKeys           []*string             `type:"list" json:",omitempty"`

	metadataCreateJobPlaylist `json:"-", xml:"-"`
}

type metadataCreateJobPlaylist struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreatePipelineInput struct {
	AWSKMSKeyARN    *string               `locationName:"AwsKmsKeyArn" type:"string" json:"AwsKmsKeyArn,omitempty"`
	ContentConfig   *PipelineOutputConfig `type:"structure" json:",omitempty"`
	InputBucket     *string               `type:"string" json:",omitempty"`
	Name            *string               `type:"string" json:",omitempty"`
	Notifications   *Notifications        `type:"structure" json:",omitempty"`
	OutputBucket    *string               `type:"string" json:",omitempty"`
	Role            *string               `type:"string" json:",omitempty"`
	ThumbnailConfig *PipelineOutputConfig `type:"structure" json:",omitempty"`

	metadataCreatePipelineInput `json:"-", xml:"-"`
}

type metadataCreatePipelineInput struct {
	SDKShapeTraits bool `type:"structure" required:"Name,InputBucket,Role" json:",omitempty"`
}

type CreatePipelineOutput struct {
	Pipeline *Pipeline  `type:"structure" json:",omitempty"`
	Warnings []*Warning `type:"list" json:",omitempty"`

	metadataCreatePipelineOutput `json:"-", xml:"-"`
}

type metadataCreatePipelineOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type CreatePresetInput struct {
	Audio       *AudioParameters `type:"structure" json:",omitempty"`
	Container   *string          `type:"string" json:",omitempty"`
	Description *string          `type:"string" json:",omitempty"`
	Name        *string          `type:"string" json:",omitempty"`
	Thumbnails  *Thumbnails      `type:"structure" json:",omitempty"`
	Video       *VideoParameters `type:"structure" json:",omitempty"`

	metadataCreatePresetInput `json:"-", xml:"-"`
}

type metadataCreatePresetInput struct {
	SDKShapeTraits bool `type:"structure" required:"Name,Container" json:",omitempty"`
}

type CreatePresetOutput struct {
	Preset  *Preset `type:"structure" json:",omitempty"`
	Warning *string `type:"string" json:",omitempty"`

	metadataCreatePresetOutput `json:"-", xml:"-"`
}

type metadataCreatePresetOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeletePipelineInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataDeletePipelineInput `json:"-", xml:"-"`
}

type metadataDeletePipelineInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type DeletePipelineOutput struct {
	metadataDeletePipelineOutput `json:"-", xml:"-"`
}

type metadataDeletePipelineOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type DeletePresetInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataDeletePresetInput `json:"-", xml:"-"`
}

type metadataDeletePresetInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type DeletePresetOutput struct {
	metadataDeletePresetOutput `json:"-", xml:"-"`
}

type metadataDeletePresetOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Encryption struct {
	InitializationVector *string `type:"string" json:",omitempty"`
	Key                  *string `type:"string" json:",omitempty"`
	KeyMD5               *string `locationName:"KeyMd5" type:"string" json:"KeyMd5,omitempty"`
	Mode                 *string `type:"string" json:",omitempty"`

	metadataEncryption `json:"-", xml:"-"`
}

type metadataEncryption struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type HLSContentProtection struct {
	InitializationVector  *string `type:"string" json:",omitempty"`
	Key                   *string `type:"string" json:",omitempty"`
	KeyMD5                *string `locationName:"KeyMd5" type:"string" json:"KeyMd5,omitempty"`
	KeyStoragePolicy      *string `type:"string" json:",omitempty"`
	LicenseAcquisitionURL *string `locationName:"LicenseAcquisitionUrl" type:"string" json:"LicenseAcquisitionUrl,omitempty"`
	Method                *string `type:"string" json:",omitempty"`

	metadataHLSContentProtection `json:"-", xml:"-"`
}

type metadataHLSContentProtection struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Job struct {
	ARN             *string             `locationName:"Arn" type:"string" json:"Arn,omitempty"`
	ID              *string             `locationName:"Id" type:"string" json:"Id,omitempty"`
	Input           *JobInput           `type:"structure" json:",omitempty"`
	Output          *JobOutput          `type:"structure" json:",omitempty"`
	OutputKeyPrefix *string             `type:"string" json:",omitempty"`
	Outputs         []*JobOutput        `type:"list" json:",omitempty"`
	PipelineID      *string             `locationName:"PipelineId" type:"string" json:"PipelineId,omitempty"`
	Playlists       []*Playlist         `type:"list" json:",omitempty"`
	Status          *string             `type:"string" json:",omitempty"`
	UserMetadata    *map[string]*string `type:"map" json:",omitempty"`

	metadataJob `json:"-", xml:"-"`
}

type metadataJob struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type JobAlbumArt struct {
	Artwork     []*Artwork `type:"list" json:",omitempty"`
	MergePolicy *string    `type:"string" json:",omitempty"`

	metadataJobAlbumArt `json:"-", xml:"-"`
}

type metadataJobAlbumArt struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type JobInput struct {
	AspectRatio *string     `type:"string" json:",omitempty"`
	Container   *string     `type:"string" json:",omitempty"`
	Encryption  *Encryption `type:"structure" json:",omitempty"`
	FrameRate   *string     `type:"string" json:",omitempty"`
	Interlaced  *string     `type:"string" json:",omitempty"`
	Key         *string     `type:"string" json:",omitempty"`
	Resolution  *string     `type:"string" json:",omitempty"`

	metadataJobInput `json:"-", xml:"-"`
}

type metadataJobInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type JobOutput struct {
	AlbumArt            *JobAlbumArt    `type:"structure" json:",omitempty"`
	Captions            *Captions       `type:"structure" json:",omitempty"`
	Composition         []*Clip         `type:"list" json:",omitempty"`
	Duration            *int64          `type:"long" json:",omitempty"`
	Encryption          *Encryption     `type:"structure" json:",omitempty"`
	Height              *int            `type:"integer" json:",omitempty"`
	ID                  *string         `locationName:"Id" type:"string" json:"Id,omitempty"`
	Key                 *string         `type:"string" json:",omitempty"`
	PresetID            *string         `locationName:"PresetId" type:"string" json:"PresetId,omitempty"`
	Rotate              *string         `type:"string" json:",omitempty"`
	SegmentDuration     *string         `type:"string" json:",omitempty"`
	Status              *string         `type:"string" json:",omitempty"`
	StatusDetail        *string         `type:"string" json:",omitempty"`
	ThumbnailEncryption *Encryption     `type:"structure" json:",omitempty"`
	ThumbnailPattern    *string         `type:"string" json:",omitempty"`
	Watermarks          []*JobWatermark `type:"list" json:",omitempty"`
	Width               *int            `type:"integer" json:",omitempty"`

	metadataJobOutput `json:"-", xml:"-"`
}

type metadataJobOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type JobWatermark struct {
	Encryption        *Encryption `type:"structure" json:",omitempty"`
	InputKey          *string     `type:"string" json:",omitempty"`
	PresetWatermarkID *string     `locationName:"PresetWatermarkId" type:"string" json:"PresetWatermarkId,omitempty"`

	metadataJobWatermark `json:"-", xml:"-"`
}

type metadataJobWatermark struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListJobsByPipelineInput struct {
	Ascending  *string `location:"querystring" locationName:"Ascending" type:"string" json:"-" xml:"-"`
	PageToken  *string `location:"querystring" locationName:"PageToken" type:"string" json:"-" xml:"-"`
	PipelineID *string `location:"uri" locationName:"PipelineId" type:"string" json:"-" xml:"-"`

	metadataListJobsByPipelineInput `json:"-", xml:"-"`
}

type metadataListJobsByPipelineInput struct {
	SDKShapeTraits bool `type:"structure" required:"PipelineId" json:",omitempty"`
}

type ListJobsByPipelineOutput struct {
	Jobs          []*Job  `type:"list" json:",omitempty"`
	NextPageToken *string `type:"string" json:",omitempty"`

	metadataListJobsByPipelineOutput `json:"-", xml:"-"`
}

type metadataListJobsByPipelineOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListJobsByStatusInput struct {
	Ascending *string `location:"querystring" locationName:"Ascending" type:"string" json:"-" xml:"-"`
	PageToken *string `location:"querystring" locationName:"PageToken" type:"string" json:"-" xml:"-"`
	Status    *string `location:"uri" locationName:"Status" type:"string" json:"-" xml:"-"`

	metadataListJobsByStatusInput `json:"-", xml:"-"`
}

type metadataListJobsByStatusInput struct {
	SDKShapeTraits bool `type:"structure" required:"Status" json:",omitempty"`
}

type ListJobsByStatusOutput struct {
	Jobs          []*Job  `type:"list" json:",omitempty"`
	NextPageToken *string `type:"string" json:",omitempty"`

	metadataListJobsByStatusOutput `json:"-", xml:"-"`
}

type metadataListJobsByStatusOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListPipelinesInput struct {
	Ascending *string `location:"querystring" locationName:"Ascending" type:"string" json:"-" xml:"-"`
	PageToken *string `location:"querystring" locationName:"PageToken" type:"string" json:"-" xml:"-"`

	metadataListPipelinesInput `json:"-", xml:"-"`
}

type metadataListPipelinesInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListPipelinesOutput struct {
	NextPageToken *string     `type:"string" json:",omitempty"`
	Pipelines     []*Pipeline `type:"list" json:",omitempty"`

	metadataListPipelinesOutput `json:"-", xml:"-"`
}

type metadataListPipelinesOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListPresetsInput struct {
	Ascending *string `location:"querystring" locationName:"Ascending" type:"string" json:"-" xml:"-"`
	PageToken *string `location:"querystring" locationName:"PageToken" type:"string" json:"-" xml:"-"`

	metadataListPresetsInput `json:"-", xml:"-"`
}

type metadataListPresetsInput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ListPresetsOutput struct {
	NextPageToken *string   `type:"string" json:",omitempty"`
	Presets       []*Preset `type:"list" json:",omitempty"`

	metadataListPresetsOutput `json:"-", xml:"-"`
}

type metadataListPresetsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Notifications struct {
	Completed   *string `type:"string" json:",omitempty"`
	Error       *string `type:"string" json:",omitempty"`
	Progressing *string `type:"string" json:",omitempty"`
	Warning     *string `type:"string" json:",omitempty"`

	metadataNotifications `json:"-", xml:"-"`
}

type metadataNotifications struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Permission struct {
	Access      []*string `type:"list" json:",omitempty"`
	Grantee     *string   `type:"string" json:",omitempty"`
	GranteeType *string   `type:"string" json:",omitempty"`

	metadataPermission `json:"-", xml:"-"`
}

type metadataPermission struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Pipeline struct {
	ARN             *string               `locationName:"Arn" type:"string" json:"Arn,omitempty"`
	AWSKMSKeyARN    *string               `locationName:"AwsKmsKeyArn" type:"string" json:"AwsKmsKeyArn,omitempty"`
	ContentConfig   *PipelineOutputConfig `type:"structure" json:",omitempty"`
	ID              *string               `locationName:"Id" type:"string" json:"Id,omitempty"`
	InputBucket     *string               `type:"string" json:",omitempty"`
	Name            *string               `type:"string" json:",omitempty"`
	Notifications   *Notifications        `type:"structure" json:",omitempty"`
	OutputBucket    *string               `type:"string" json:",omitempty"`
	Role            *string               `type:"string" json:",omitempty"`
	Status          *string               `type:"string" json:",omitempty"`
	ThumbnailConfig *PipelineOutputConfig `type:"structure" json:",omitempty"`

	metadataPipeline `json:"-", xml:"-"`
}

type metadataPipeline struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type PipelineOutputConfig struct {
	Bucket       *string       `type:"string" json:",omitempty"`
	Permissions  []*Permission `type:"list" json:",omitempty"`
	StorageClass *string       `type:"string" json:",omitempty"`

	metadataPipelineOutputConfig `json:"-", xml:"-"`
}

type metadataPipelineOutputConfig struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Playlist struct {
	Format               *string               `type:"string" json:",omitempty"`
	HLSContentProtection *HLSContentProtection `locationName:"HlsContentProtection" type:"structure" json:"HlsContentProtection,omitempty"`
	Name                 *string               `type:"string" json:",omitempty"`
	OutputKeys           []*string             `type:"list" json:",omitempty"`
	Status               *string               `type:"string" json:",omitempty"`
	StatusDetail         *string               `type:"string" json:",omitempty"`

	metadataPlaylist `json:"-", xml:"-"`
}

type metadataPlaylist struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Preset struct {
	ARN         *string          `locationName:"Arn" type:"string" json:"Arn,omitempty"`
	Audio       *AudioParameters `type:"structure" json:",omitempty"`
	Container   *string          `type:"string" json:",omitempty"`
	Description *string          `type:"string" json:",omitempty"`
	ID          *string          `locationName:"Id" type:"string" json:"Id,omitempty"`
	Name        *string          `type:"string" json:",omitempty"`
	Thumbnails  *Thumbnails      `type:"structure" json:",omitempty"`
	Type        *string          `type:"string" json:",omitempty"`
	Video       *VideoParameters `type:"structure" json:",omitempty"`

	metadataPreset `json:"-", xml:"-"`
}

type metadataPreset struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type PresetWatermark struct {
	HorizontalAlign  *string `type:"string" json:",omitempty"`
	HorizontalOffset *string `type:"string" json:",omitempty"`
	ID               *string `locationName:"Id" type:"string" json:"Id,omitempty"`
	MaxHeight        *string `type:"string" json:",omitempty"`
	MaxWidth         *string `type:"string" json:",omitempty"`
	Opacity          *string `type:"string" json:",omitempty"`
	SizingPolicy     *string `type:"string" json:",omitempty"`
	Target           *string `type:"string" json:",omitempty"`
	VerticalAlign    *string `type:"string" json:",omitempty"`
	VerticalOffset   *string `type:"string" json:",omitempty"`

	metadataPresetWatermark `json:"-", xml:"-"`
}

type metadataPresetWatermark struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ReadJobInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataReadJobInput `json:"-", xml:"-"`
}

type metadataReadJobInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type ReadJobOutput struct {
	Job *Job `type:"structure" json:",omitempty"`

	metadataReadJobOutput `json:"-", xml:"-"`
}

type metadataReadJobOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ReadPipelineInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataReadPipelineInput `json:"-", xml:"-"`
}

type metadataReadPipelineInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type ReadPipelineOutput struct {
	Pipeline *Pipeline  `type:"structure" json:",omitempty"`
	Warnings []*Warning `type:"list" json:",omitempty"`

	metadataReadPipelineOutput `json:"-", xml:"-"`
}

type metadataReadPipelineOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type ReadPresetInput struct {
	ID *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`

	metadataReadPresetInput `json:"-", xml:"-"`
}

type metadataReadPresetInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type ReadPresetOutput struct {
	Preset *Preset `type:"structure" json:",omitempty"`

	metadataReadPresetOutput `json:"-", xml:"-"`
}

type metadataReadPresetOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TestRoleInput struct {
	InputBucket  *string   `type:"string" json:",omitempty"`
	OutputBucket *string   `type:"string" json:",omitempty"`
	Role         *string   `type:"string" json:",omitempty"`
	Topics       []*string `type:"list" json:",omitempty"`

	metadataTestRoleInput `json:"-", xml:"-"`
}

type metadataTestRoleInput struct {
	SDKShapeTraits bool `type:"structure" required:"Role,InputBucket,OutputBucket,Topics" json:",omitempty"`
}

type TestRoleOutput struct {
	Messages []*string `type:"list" json:",omitempty"`
	Success  *string   `type:"string" json:",omitempty"`

	metadataTestRoleOutput `json:"-", xml:"-"`
}

type metadataTestRoleOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Thumbnails struct {
	AspectRatio   *string `type:"string" json:",omitempty"`
	Format        *string `type:"string" json:",omitempty"`
	Interval      *string `type:"string" json:",omitempty"`
	MaxHeight     *string `type:"string" json:",omitempty"`
	MaxWidth      *string `type:"string" json:",omitempty"`
	PaddingPolicy *string `type:"string" json:",omitempty"`
	Resolution    *string `type:"string" json:",omitempty"`
	SizingPolicy  *string `type:"string" json:",omitempty"`

	metadataThumbnails `json:"-", xml:"-"`
}

type metadataThumbnails struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type TimeSpan struct {
	Duration  *string `type:"string" json:",omitempty"`
	StartTime *string `type:"string" json:",omitempty"`

	metadataTimeSpan `json:"-", xml:"-"`
}

type metadataTimeSpan struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdatePipelineInput struct {
	AWSKMSKeyARN    *string               `locationName:"AwsKmsKeyArn" type:"string" json:"AwsKmsKeyArn,omitempty"`
	ContentConfig   *PipelineOutputConfig `type:"structure" json:",omitempty"`
	ID              *string               `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	InputBucket     *string               `type:"string" json:",omitempty"`
	Name            *string               `type:"string" json:",omitempty"`
	Notifications   *Notifications        `type:"structure" json:",omitempty"`
	Role            *string               `type:"string" json:",omitempty"`
	ThumbnailConfig *PipelineOutputConfig `type:"structure" json:",omitempty"`

	metadataUpdatePipelineInput `json:"-", xml:"-"`
}

type metadataUpdatePipelineInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id" json:",omitempty"`
}

type UpdatePipelineNotificationsInput struct {
	ID            *string        `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	Notifications *Notifications `type:"structure" json:",omitempty"`

	metadataUpdatePipelineNotificationsInput `json:"-", xml:"-"`
}

type metadataUpdatePipelineNotificationsInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Notifications" json:",omitempty"`
}

type UpdatePipelineNotificationsOutput struct {
	Pipeline *Pipeline `type:"structure" json:",omitempty"`

	metadataUpdatePipelineNotificationsOutput `json:"-", xml:"-"`
}

type metadataUpdatePipelineNotificationsOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdatePipelineOutput struct {
	Pipeline *Pipeline  `type:"structure" json:",omitempty"`
	Warnings []*Warning `type:"list" json:",omitempty"`

	metadataUpdatePipelineOutput `json:"-", xml:"-"`
}

type metadataUpdatePipelineOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type UpdatePipelineStatusInput struct {
	ID     *string `location:"uri" locationName:"Id" type:"string" json:"-" xml:"-"`
	Status *string `type:"string" json:",omitempty"`

	metadataUpdatePipelineStatusInput `json:"-", xml:"-"`
}

type metadataUpdatePipelineStatusInput struct {
	SDKShapeTraits bool `type:"structure" required:"Id,Status" json:",omitempty"`
}

type UpdatePipelineStatusOutput struct {
	Pipeline *Pipeline `type:"structure" json:",omitempty"`

	metadataUpdatePipelineStatusOutput `json:"-", xml:"-"`
}

type metadataUpdatePipelineStatusOutput struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type VideoParameters struct {
	AspectRatio        *string             `type:"string" json:",omitempty"`
	BitRate            *string             `type:"string" json:",omitempty"`
	Codec              *string             `type:"string" json:",omitempty"`
	CodecOptions       *map[string]*string `type:"map" json:",omitempty"`
	DisplayAspectRatio *string             `type:"string" json:",omitempty"`
	FixedGOP           *string             `type:"string" json:",omitempty"`
	FrameRate          *string             `type:"string" json:",omitempty"`
	KeyframesMaxDist   *string             `type:"string" json:",omitempty"`
	MaxFrameRate       *string             `type:"string" json:",omitempty"`
	MaxHeight          *string             `type:"string" json:",omitempty"`
	MaxWidth           *string             `type:"string" json:",omitempty"`
	PaddingPolicy      *string             `type:"string" json:",omitempty"`
	Resolution         *string             `type:"string" json:",omitempty"`
	SizingPolicy       *string             `type:"string" json:",omitempty"`
	Watermarks         []*PresetWatermark  `type:"list" json:",omitempty"`

	metadataVideoParameters `json:"-", xml:"-"`
}

type metadataVideoParameters struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}

type Warning struct {
	Code    *string `type:"string" json:",omitempty"`
	Message *string `type:"string" json:",omitempty"`

	metadataWarning `json:"-", xml:"-"`
}

type metadataWarning struct {
	SDKShapeTraits bool `type:"structure" json:",omitempty"`
}