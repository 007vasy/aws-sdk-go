package importexport

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"time"

	"github.com/awslabs/aws-sdk-go/aws"
)

// CancelJobRequest generates a request for the CancelJob operation.
func (c *ImportExport) CancelJobRequest(input *CancelJobInput) (req *aws.Request, output *CancelJobOutput) {
	if opCancelJob == nil {
		opCancelJob = &aws.Operation{
			Name:       "CancelJob",
			HTTPMethod: "POST",
			HTTPPath:   "/?Operation=CancelJob",
		}
	}

	req = aws.NewRequest(c.Service, opCancelJob, input, output)
	output = &CancelJobOutput{}
	req.Data = output
	return
}

func (c *ImportExport) CancelJob(input *CancelJobInput) (output *CancelJobOutput, err error) {
	req, out := c.CancelJobRequest(input)
	output = out
	err = req.Send()
	return
}

var opCancelJob *aws.Operation

// CreateJobRequest generates a request for the CreateJob operation.
func (c *ImportExport) CreateJobRequest(input *CreateJobInput) (req *aws.Request, output *CreateJobOutput) {
	if opCreateJob == nil {
		opCreateJob = &aws.Operation{
			Name:       "CreateJob",
			HTTPMethod: "POST",
			HTTPPath:   "/?Operation=CreateJob",
		}
	}

	req = aws.NewRequest(c.Service, opCreateJob, input, output)
	output = &CreateJobOutput{}
	req.Data = output
	return
}

func (c *ImportExport) CreateJob(input *CreateJobInput) (output *CreateJobOutput, err error) {
	req, out := c.CreateJobRequest(input)
	output = out
	err = req.Send()
	return
}

var opCreateJob *aws.Operation

// GetShippingLabelRequest generates a request for the GetShippingLabel operation.
func (c *ImportExport) GetShippingLabelRequest(input *GetShippingLabelInput) (req *aws.Request, output *GetShippingLabelOutput) {
	if opGetShippingLabel == nil {
		opGetShippingLabel = &aws.Operation{
			Name:       "GetShippingLabel",
			HTTPMethod: "POST",
			HTTPPath:   "/?Operation=GetShippingLabel",
		}
	}

	req = aws.NewRequest(c.Service, opGetShippingLabel, input, output)
	output = &GetShippingLabelOutput{}
	req.Data = output
	return
}

func (c *ImportExport) GetShippingLabel(input *GetShippingLabelInput) (output *GetShippingLabelOutput, err error) {
	req, out := c.GetShippingLabelRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetShippingLabel *aws.Operation

// GetStatusRequest generates a request for the GetStatus operation.
func (c *ImportExport) GetStatusRequest(input *GetStatusInput) (req *aws.Request, output *GetStatusOutput) {
	if opGetStatus == nil {
		opGetStatus = &aws.Operation{
			Name:       "GetStatus",
			HTTPMethod: "POST",
			HTTPPath:   "/?Operation=GetStatus",
		}
	}

	req = aws.NewRequest(c.Service, opGetStatus, input, output)
	output = &GetStatusOutput{}
	req.Data = output
	return
}

func (c *ImportExport) GetStatus(input *GetStatusInput) (output *GetStatusOutput, err error) {
	req, out := c.GetStatusRequest(input)
	output = out
	err = req.Send()
	return
}

var opGetStatus *aws.Operation

// ListJobsRequest generates a request for the ListJobs operation.
func (c *ImportExport) ListJobsRequest(input *ListJobsInput) (req *aws.Request, output *ListJobsOutput) {
	if opListJobs == nil {
		opListJobs = &aws.Operation{
			Name:       "ListJobs",
			HTTPMethod: "POST",
			HTTPPath:   "/?Operation=ListJobs",
		}
	}

	req = aws.NewRequest(c.Service, opListJobs, input, output)
	output = &ListJobsOutput{}
	req.Data = output
	return
}

func (c *ImportExport) ListJobs(input *ListJobsInput) (output *ListJobsOutput, err error) {
	req, out := c.ListJobsRequest(input)
	output = out
	err = req.Send()
	return
}

var opListJobs *aws.Operation

// UpdateJobRequest generates a request for the UpdateJob operation.
func (c *ImportExport) UpdateJobRequest(input *UpdateJobInput) (req *aws.Request, output *UpdateJobOutput) {
	if opUpdateJob == nil {
		opUpdateJob = &aws.Operation{
			Name:       "UpdateJob",
			HTTPMethod: "POST",
			HTTPPath:   "/?Operation=UpdateJob",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateJob, input, output)
	output = &UpdateJobOutput{}
	req.Data = output
	return
}

func (c *ImportExport) UpdateJob(input *UpdateJobInput) (output *UpdateJobOutput, err error) {
	req, out := c.UpdateJobRequest(input)
	output = out
	err = req.Send()
	return
}

var opUpdateJob *aws.Operation

type Artifact struct {
	Description *string `type:"string"`
	URL         *string `type:"string"`

	metadataArtifact `json:"-", xml:"-"`
}

type metadataArtifact struct {
	SDKShapeTraits bool `type:"structure"`
}

type BucketPermissionException struct {
	Message *string `locationName:"message" type:"string"`

	metadataBucketPermissionException `json:"-", xml:"-"`
}

type metadataBucketPermissionException struct {
	SDKShapeTraits bool `type:"structure"`
}

type CancelJobInput struct {
	APIVersion *string `type:"string"`
	JobID      *string `locationName:"JobId" type:"string"`

	metadataCancelJobInput `json:"-", xml:"-"`
}

type metadataCancelJobInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobId"`
}

type CancelJobOutput struct {
	Success *bool `type:"boolean"`

	metadataCancelJobOutput `json:"-", xml:"-"`
}

type metadataCancelJobOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CancelJobResult"`
}

type CanceledJobIDException struct {
	Message *string `locationName:"message" type:"string"`

	metadataCanceledJobIDException `json:"-", xml:"-"`
}

type metadataCanceledJobIDException struct {
	SDKShapeTraits bool `type:"structure"`
}

type CreateJobInput struct {
	APIVersion       *string `type:"string"`
	JobType          *string `type:"string"`
	Manifest         *string `type:"string"`
	ManifestAddendum *string `type:"string"`
	ValidateOnly     *bool   `type:"boolean"`

	metadataCreateJobInput `json:"-", xml:"-"`
}

type metadataCreateJobInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobType,Manifest,ValidateOnly"`
}

type CreateJobOutput struct {
	ArtifactList          []*Artifact `type:"list"`
	JobID                 *string     `locationName:"JobId" type:"string"`
	JobType               *string     `type:"string"`
	Signature             *string     `type:"string"`
	SignatureFileContents *string     `type:"string"`
	WarningMessage        *string     `type:"string"`

	metadataCreateJobOutput `json:"-", xml:"-"`
}

type metadataCreateJobOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CreateJobResult"`
}

type CreateJobQuotaExceededException struct {
	Message *string `locationName:"message" type:"string"`

	metadataCreateJobQuotaExceededException `json:"-", xml:"-"`
}

type metadataCreateJobQuotaExceededException struct {
	SDKShapeTraits bool `type:"structure"`
}

type ExpiredJobIDException struct {
	Message *string `locationName:"message" type:"string"`

	metadataExpiredJobIDException `json:"-", xml:"-"`
}

type metadataExpiredJobIDException struct {
	SDKShapeTraits bool `type:"structure"`
}

type GetShippingLabelInput struct {
	APIVersion      *string   `type:"string"`
	City            *string   `locationName:"city" type:"string"`
	Company         *string   `locationName:"company" type:"string"`
	Country         *string   `locationName:"country" type:"string"`
	JobIDs          []*string `locationName:"jobIds" type:"list"`
	Name            *string   `locationName:"name" type:"string"`
	PhoneNumber     *string   `locationName:"phoneNumber" type:"string"`
	PostalCode      *string   `locationName:"postalCode" type:"string"`
	StateOrProvince *string   `locationName:"stateOrProvince" type:"string"`
	Street1         *string   `locationName:"street1" type:"string"`
	Street2         *string   `locationName:"street2" type:"string"`
	Street3         *string   `locationName:"street3" type:"string"`

	metadataGetShippingLabelInput `json:"-", xml:"-"`
}

type metadataGetShippingLabelInput struct {
	SDKShapeTraits bool `type:"structure" required:"jobIds"`
}

type GetShippingLabelOutput struct {
	ShippingLabelURL *string `type:"string"`
	Warning          *string `type:"string"`

	metadataGetShippingLabelOutput `json:"-", xml:"-"`
}

type metadataGetShippingLabelOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"GetShippingLabelResult"`
}

type GetStatusInput struct {
	APIVersion *string `type:"string"`
	JobID      *string `locationName:"JobId" type:"string"`

	metadataGetStatusInput `json:"-", xml:"-"`
}

type metadataGetStatusInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobId"`
}

type GetStatusOutput struct {
	ArtifactList          []*Artifact `type:"list"`
	Carrier               *string     `type:"string"`
	CreationDate          *time.Time  `type:"timestamp" timestampFormat:"iso8601"`
	CurrentManifest       *string     `type:"string"`
	ErrorCount            *int        `type:"integer"`
	JobID                 *string     `locationName:"JobId" type:"string"`
	JobType               *string     `type:"string"`
	LocationCode          *string     `type:"string"`
	LocationMessage       *string     `type:"string"`
	LogBucket             *string     `type:"string"`
	LogKey                *string     `type:"string"`
	ProgressCode          *string     `type:"string"`
	ProgressMessage       *string     `type:"string"`
	Signature             *string     `type:"string"`
	SignatureFileContents *string     `type:"string"`
	TrackingNumber        *string     `type:"string"`

	metadataGetStatusOutput `json:"-", xml:"-"`
}

type metadataGetStatusOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"GetStatusResult"`
}

type InvalidAccessKeyIDException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidAccessKeyIDException `json:"-", xml:"-"`
}

type metadataInvalidAccessKeyIDException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidAddressException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidAddressException `json:"-", xml:"-"`
}

type metadataInvalidAddressException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidCustomsException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidCustomsException `json:"-", xml:"-"`
}

type metadataInvalidCustomsException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidFileSystemException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidFileSystemException `json:"-", xml:"-"`
}

type metadataInvalidFileSystemException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidJobIDException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidJobIDException `json:"-", xml:"-"`
}

type metadataInvalidJobIDException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidManifestFieldException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidManifestFieldException `json:"-", xml:"-"`
}

type metadataInvalidManifestFieldException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidParameterException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidParameterException `json:"-", xml:"-"`
}

type metadataInvalidParameterException struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidVersionException struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidVersionException `json:"-", xml:"-"`
}

type metadataInvalidVersionException struct {
	SDKShapeTraits bool `type:"structure"`
}

type Job struct {
	CreationDate *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	IsCanceled   *bool      `type:"boolean"`
	JobID        *string    `locationName:"JobId" type:"string"`
	JobType      *string    `type:"string"`

	metadataJob `json:"-", xml:"-"`
}

type metadataJob struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListJobsInput struct {
	APIVersion *string `type:"string"`
	Marker     *string `type:"string"`
	MaxJobs    *int    `type:"integer"`

	metadataListJobsInput `json:"-", xml:"-"`
}

type metadataListJobsInput struct {
	SDKShapeTraits bool `type:"structure"`
}

type ListJobsOutput struct {
	IsTruncated *bool  `type:"boolean"`
	Jobs        []*Job `type:"list"`

	metadataListJobsOutput `json:"-", xml:"-"`
}

type metadataListJobsOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ListJobsResult"`
}

type MalformedManifestException struct {
	Message *string `locationName:"message" type:"string"`

	metadataMalformedManifestException `json:"-", xml:"-"`
}

type metadataMalformedManifestException struct {
	SDKShapeTraits bool `type:"structure"`
}

type MissingCustomsException struct {
	Message *string `locationName:"message" type:"string"`

	metadataMissingCustomsException `json:"-", xml:"-"`
}

type metadataMissingCustomsException struct {
	SDKShapeTraits bool `type:"structure"`
}

type MissingManifestFieldException struct {
	Message *string `locationName:"message" type:"string"`

	metadataMissingManifestFieldException `json:"-", xml:"-"`
}

type metadataMissingManifestFieldException struct {
	SDKShapeTraits bool `type:"structure"`
}

type MissingParameterException struct {
	Message *string `locationName:"message" type:"string"`

	metadataMissingParameterException `json:"-", xml:"-"`
}

type metadataMissingParameterException struct {
	SDKShapeTraits bool `type:"structure"`
}

type MultipleRegionsException struct {
	Message *string `locationName:"message" type:"string"`

	metadataMultipleRegionsException `json:"-", xml:"-"`
}

type metadataMultipleRegionsException struct {
	SDKShapeTraits bool `type:"structure"`
}

type NoSuchBucketException struct {
	Message *string `locationName:"message" type:"string"`

	metadataNoSuchBucketException `json:"-", xml:"-"`
}

type metadataNoSuchBucketException struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnableToCancelJobIDException struct {
	Message *string `locationName:"message" type:"string"`

	metadataUnableToCancelJobIDException `json:"-", xml:"-"`
}

type metadataUnableToCancelJobIDException struct {
	SDKShapeTraits bool `type:"structure"`
}

type UnableToUpdateJobIDException struct {
	Message *string `locationName:"message" type:"string"`

	metadataUnableToUpdateJobIDException `json:"-", xml:"-"`
}

type metadataUnableToUpdateJobIDException struct {
	SDKShapeTraits bool `type:"structure"`
}

type UpdateJobInput struct {
	APIVersion   *string `type:"string"`
	JobID        *string `locationName:"JobId" type:"string"`
	JobType      *string `type:"string"`
	Manifest     *string `type:"string"`
	ValidateOnly *bool   `type:"boolean"`

	metadataUpdateJobInput `json:"-", xml:"-"`
}

type metadataUpdateJobInput struct {
	SDKShapeTraits bool `type:"structure" required:"JobId,Manifest,JobType,ValidateOnly"`
}

type UpdateJobOutput struct {
	ArtifactList   []*Artifact `type:"list"`
	Success        *bool       `type:"boolean"`
	WarningMessage *string     `type:"string"`

	metadataUpdateJobOutput `json:"-", xml:"-"`
}

type metadataUpdateJobOutput struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"UpdateJobResult"`
}