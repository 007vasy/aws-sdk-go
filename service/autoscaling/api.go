package autoscaling

// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

import (
	"github.com/awslabs/aws-sdk-go/aws"
	"time"
)

// AttachInstancesRequest generates a request for the AttachInstances operation.
func (c *AutoScaling) AttachInstancesRequest(input *AttachInstancesQuery) (req *aws.Request) {
	if opAttachInstances == nil {
		opAttachInstances = &aws.Operation{
			Name:       "AttachInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opAttachInstances, input, nil)

	return
}

func (c *AutoScaling) AttachInstances(input *AttachInstancesQuery) (err error) {
	req := c.AttachInstancesRequest(input)
	err = req.Send()
	return
}

var opAttachInstances *aws.Operation

// CompleteLifecycleActionRequest generates a request for the CompleteLifecycleAction operation.
func (c *AutoScaling) CompleteLifecycleActionRequest(input *CompleteLifecycleActionType) (req *aws.Request, output *CompleteLifecycleActionAnswer) {
	if opCompleteLifecycleAction == nil {
		opCompleteLifecycleAction = &aws.Operation{
			Name:       "CompleteLifecycleAction",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCompleteLifecycleAction, input, output)
	output = &CompleteLifecycleActionAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) CompleteLifecycleAction(input *CompleteLifecycleActionType) (output *CompleteLifecycleActionAnswer, err error) {
	req, out := c.CompleteLifecycleActionRequest(input)
	output = out
	err = req.Send()
	return
}

var opCompleteLifecycleAction *aws.Operation

// CreateAutoScalingGroupRequest generates a request for the CreateAutoScalingGroup operation.
func (c *AutoScaling) CreateAutoScalingGroupRequest(input *CreateAutoScalingGroupType) (req *aws.Request) {
	if opCreateAutoScalingGroup == nil {
		opCreateAutoScalingGroup = &aws.Operation{
			Name:       "CreateAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateAutoScalingGroup, input, nil)

	return
}

func (c *AutoScaling) CreateAutoScalingGroup(input *CreateAutoScalingGroupType) (err error) {
	req := c.CreateAutoScalingGroupRequest(input)
	err = req.Send()
	return
}

var opCreateAutoScalingGroup *aws.Operation

// CreateLaunchConfigurationRequest generates a request for the CreateLaunchConfiguration operation.
func (c *AutoScaling) CreateLaunchConfigurationRequest(input *CreateLaunchConfigurationType) (req *aws.Request) {
	if opCreateLaunchConfiguration == nil {
		opCreateLaunchConfiguration = &aws.Operation{
			Name:       "CreateLaunchConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateLaunchConfiguration, input, nil)

	return
}

func (c *AutoScaling) CreateLaunchConfiguration(input *CreateLaunchConfigurationType) (err error) {
	req := c.CreateLaunchConfigurationRequest(input)
	err = req.Send()
	return
}

var opCreateLaunchConfiguration *aws.Operation

// CreateOrUpdateTagsRequest generates a request for the CreateOrUpdateTags operation.
func (c *AutoScaling) CreateOrUpdateTagsRequest(input *CreateOrUpdateTagsType) (req *aws.Request) {
	if opCreateOrUpdateTags == nil {
		opCreateOrUpdateTags = &aws.Operation{
			Name:       "CreateOrUpdateTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opCreateOrUpdateTags, input, nil)

	return
}

func (c *AutoScaling) CreateOrUpdateTags(input *CreateOrUpdateTagsType) (err error) {
	req := c.CreateOrUpdateTagsRequest(input)
	err = req.Send()
	return
}

var opCreateOrUpdateTags *aws.Operation

// DeleteAutoScalingGroupRequest generates a request for the DeleteAutoScalingGroup operation.
func (c *AutoScaling) DeleteAutoScalingGroupRequest(input *DeleteAutoScalingGroupType) (req *aws.Request) {
	if opDeleteAutoScalingGroup == nil {
		opDeleteAutoScalingGroup = &aws.Operation{
			Name:       "DeleteAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteAutoScalingGroup, input, nil)

	return
}

func (c *AutoScaling) DeleteAutoScalingGroup(input *DeleteAutoScalingGroupType) (err error) {
	req := c.DeleteAutoScalingGroupRequest(input)
	err = req.Send()
	return
}

var opDeleteAutoScalingGroup *aws.Operation

// DeleteLaunchConfigurationRequest generates a request for the DeleteLaunchConfiguration operation.
func (c *AutoScaling) DeleteLaunchConfigurationRequest(input *LaunchConfigurationNameType) (req *aws.Request) {
	if opDeleteLaunchConfiguration == nil {
		opDeleteLaunchConfiguration = &aws.Operation{
			Name:       "DeleteLaunchConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLaunchConfiguration, input, nil)

	return
}

func (c *AutoScaling) DeleteLaunchConfiguration(input *LaunchConfigurationNameType) (err error) {
	req := c.DeleteLaunchConfigurationRequest(input)
	err = req.Send()
	return
}

var opDeleteLaunchConfiguration *aws.Operation

// DeleteLifecycleHookRequest generates a request for the DeleteLifecycleHook operation.
func (c *AutoScaling) DeleteLifecycleHookRequest(input *DeleteLifecycleHookType) (req *aws.Request, output *DeleteLifecycleHookAnswer) {
	if opDeleteLifecycleHook == nil {
		opDeleteLifecycleHook = &aws.Operation{
			Name:       "DeleteLifecycleHook",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteLifecycleHook, input, output)
	output = &DeleteLifecycleHookAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DeleteLifecycleHook(input *DeleteLifecycleHookType) (output *DeleteLifecycleHookAnswer, err error) {
	req, out := c.DeleteLifecycleHookRequest(input)
	output = out
	err = req.Send()
	return
}

var opDeleteLifecycleHook *aws.Operation

// DeleteNotificationConfigurationRequest generates a request for the DeleteNotificationConfiguration operation.
func (c *AutoScaling) DeleteNotificationConfigurationRequest(input *DeleteNotificationConfigurationType) (req *aws.Request) {
	if opDeleteNotificationConfiguration == nil {
		opDeleteNotificationConfiguration = &aws.Operation{
			Name:       "DeleteNotificationConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteNotificationConfiguration, input, nil)

	return
}

func (c *AutoScaling) DeleteNotificationConfiguration(input *DeleteNotificationConfigurationType) (err error) {
	req := c.DeleteNotificationConfigurationRequest(input)
	err = req.Send()
	return
}

var opDeleteNotificationConfiguration *aws.Operation

// DeletePolicyRequest generates a request for the DeletePolicy operation.
func (c *AutoScaling) DeletePolicyRequest(input *DeletePolicyType) (req *aws.Request) {
	if opDeletePolicy == nil {
		opDeletePolicy = &aws.Operation{
			Name:       "DeletePolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeletePolicy, input, nil)

	return
}

func (c *AutoScaling) DeletePolicy(input *DeletePolicyType) (err error) {
	req := c.DeletePolicyRequest(input)
	err = req.Send()
	return
}

var opDeletePolicy *aws.Operation

// DeleteScheduledActionRequest generates a request for the DeleteScheduledAction operation.
func (c *AutoScaling) DeleteScheduledActionRequest(input *DeleteScheduledActionType) (req *aws.Request) {
	if opDeleteScheduledAction == nil {
		opDeleteScheduledAction = &aws.Operation{
			Name:       "DeleteScheduledAction",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteScheduledAction, input, nil)

	return
}

func (c *AutoScaling) DeleteScheduledAction(input *DeleteScheduledActionType) (err error) {
	req := c.DeleteScheduledActionRequest(input)
	err = req.Send()
	return
}

var opDeleteScheduledAction *aws.Operation

// DeleteTagsRequest generates a request for the DeleteTags operation.
func (c *AutoScaling) DeleteTagsRequest(input *DeleteTagsType) (req *aws.Request) {
	if opDeleteTags == nil {
		opDeleteTags = &aws.Operation{
			Name:       "DeleteTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDeleteTags, input, nil)

	return
}

func (c *AutoScaling) DeleteTags(input *DeleteTagsType) (err error) {
	req := c.DeleteTagsRequest(input)
	err = req.Send()
	return
}

var opDeleteTags *aws.Operation

// DescribeAccountLimitsRequest generates a request for the DescribeAccountLimits operation.
func (c *AutoScaling) DescribeAccountLimitsRequest() (req *aws.Request, output *DescribeAccountLimitsAnswer) {
	if opDescribeAccountLimits == nil {
		opDescribeAccountLimits = &aws.Operation{
			Name:       "DescribeAccountLimits",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAccountLimits, nil, output)
	output = &DescribeAccountLimitsAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAccountLimits() (output *DescribeAccountLimitsAnswer, err error) {
	req, out := c.DescribeAccountLimitsRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeAccountLimits *aws.Operation

// DescribeAdjustmentTypesRequest generates a request for the DescribeAdjustmentTypes operation.
func (c *AutoScaling) DescribeAdjustmentTypesRequest() (req *aws.Request, output *DescribeAdjustmentTypesAnswer) {
	if opDescribeAdjustmentTypes == nil {
		opDescribeAdjustmentTypes = &aws.Operation{
			Name:       "DescribeAdjustmentTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAdjustmentTypes, nil, output)
	output = &DescribeAdjustmentTypesAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAdjustmentTypes() (output *DescribeAdjustmentTypesAnswer, err error) {
	req, out := c.DescribeAdjustmentTypesRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeAdjustmentTypes *aws.Operation

// DescribeAutoScalingGroupsRequest generates a request for the DescribeAutoScalingGroups operation.
func (c *AutoScaling) DescribeAutoScalingGroupsRequest(input *AutoScalingGroupNamesType) (req *aws.Request, output *AutoScalingGroupsType) {
	if opDescribeAutoScalingGroups == nil {
		opDescribeAutoScalingGroups = &aws.Operation{
			Name:       "DescribeAutoScalingGroups",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAutoScalingGroups, input, output)
	output = &AutoScalingGroupsType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAutoScalingGroups(input *AutoScalingGroupNamesType) (output *AutoScalingGroupsType, err error) {
	req, out := c.DescribeAutoScalingGroupsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeAutoScalingGroups *aws.Operation

// DescribeAutoScalingInstancesRequest generates a request for the DescribeAutoScalingInstances operation.
func (c *AutoScaling) DescribeAutoScalingInstancesRequest(input *DescribeAutoScalingInstancesType) (req *aws.Request, output *AutoScalingInstancesType) {
	if opDescribeAutoScalingInstances == nil {
		opDescribeAutoScalingInstances = &aws.Operation{
			Name:       "DescribeAutoScalingInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAutoScalingInstances, input, output)
	output = &AutoScalingInstancesType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAutoScalingInstances(input *DescribeAutoScalingInstancesType) (output *AutoScalingInstancesType, err error) {
	req, out := c.DescribeAutoScalingInstancesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeAutoScalingInstances *aws.Operation

// DescribeAutoScalingNotificationTypesRequest generates a request for the DescribeAutoScalingNotificationTypes operation.
func (c *AutoScaling) DescribeAutoScalingNotificationTypesRequest() (req *aws.Request, output *DescribeAutoScalingNotificationTypesAnswer) {
	if opDescribeAutoScalingNotificationTypes == nil {
		opDescribeAutoScalingNotificationTypes = &aws.Operation{
			Name:       "DescribeAutoScalingNotificationTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeAutoScalingNotificationTypes, nil, output)
	output = &DescribeAutoScalingNotificationTypesAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeAutoScalingNotificationTypes() (output *DescribeAutoScalingNotificationTypesAnswer, err error) {
	req, out := c.DescribeAutoScalingNotificationTypesRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeAutoScalingNotificationTypes *aws.Operation

// DescribeLaunchConfigurationsRequest generates a request for the DescribeLaunchConfigurations operation.
func (c *AutoScaling) DescribeLaunchConfigurationsRequest(input *LaunchConfigurationNamesType) (req *aws.Request, output *LaunchConfigurationsType) {
	if opDescribeLaunchConfigurations == nil {
		opDescribeLaunchConfigurations = &aws.Operation{
			Name:       "DescribeLaunchConfigurations",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLaunchConfigurations, input, output)
	output = &LaunchConfigurationsType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeLaunchConfigurations(input *LaunchConfigurationNamesType) (output *LaunchConfigurationsType, err error) {
	req, out := c.DescribeLaunchConfigurationsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLaunchConfigurations *aws.Operation

// DescribeLifecycleHookTypesRequest generates a request for the DescribeLifecycleHookTypes operation.
func (c *AutoScaling) DescribeLifecycleHookTypesRequest() (req *aws.Request, output *DescribeLifecycleHookTypesAnswer) {
	if opDescribeLifecycleHookTypes == nil {
		opDescribeLifecycleHookTypes = &aws.Operation{
			Name:       "DescribeLifecycleHookTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLifecycleHookTypes, nil, output)
	output = &DescribeLifecycleHookTypesAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeLifecycleHookTypes() (output *DescribeLifecycleHookTypesAnswer, err error) {
	req, out := c.DescribeLifecycleHookTypesRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeLifecycleHookTypes *aws.Operation

// DescribeLifecycleHooksRequest generates a request for the DescribeLifecycleHooks operation.
func (c *AutoScaling) DescribeLifecycleHooksRequest(input *DescribeLifecycleHooksType) (req *aws.Request, output *DescribeLifecycleHooksAnswer) {
	if opDescribeLifecycleHooks == nil {
		opDescribeLifecycleHooks = &aws.Operation{
			Name:       "DescribeLifecycleHooks",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeLifecycleHooks, input, output)
	output = &DescribeLifecycleHooksAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeLifecycleHooks(input *DescribeLifecycleHooksType) (output *DescribeLifecycleHooksAnswer, err error) {
	req, out := c.DescribeLifecycleHooksRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeLifecycleHooks *aws.Operation

// DescribeMetricCollectionTypesRequest generates a request for the DescribeMetricCollectionTypes operation.
func (c *AutoScaling) DescribeMetricCollectionTypesRequest() (req *aws.Request, output *DescribeMetricCollectionTypesAnswer) {
	if opDescribeMetricCollectionTypes == nil {
		opDescribeMetricCollectionTypes = &aws.Operation{
			Name:       "DescribeMetricCollectionTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeMetricCollectionTypes, nil, output)
	output = &DescribeMetricCollectionTypesAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeMetricCollectionTypes() (output *DescribeMetricCollectionTypesAnswer, err error) {
	req, out := c.DescribeMetricCollectionTypesRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeMetricCollectionTypes *aws.Operation

// DescribeNotificationConfigurationsRequest generates a request for the DescribeNotificationConfigurations operation.
func (c *AutoScaling) DescribeNotificationConfigurationsRequest(input *DescribeNotificationConfigurationsType) (req *aws.Request, output *DescribeNotificationConfigurationsAnswer) {
	if opDescribeNotificationConfigurations == nil {
		opDescribeNotificationConfigurations = &aws.Operation{
			Name:       "DescribeNotificationConfigurations",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeNotificationConfigurations, input, output)
	output = &DescribeNotificationConfigurationsAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeNotificationConfigurations(input *DescribeNotificationConfigurationsType) (output *DescribeNotificationConfigurationsAnswer, err error) {
	req, out := c.DescribeNotificationConfigurationsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeNotificationConfigurations *aws.Operation

// DescribePoliciesRequest generates a request for the DescribePolicies operation.
func (c *AutoScaling) DescribePoliciesRequest(input *DescribePoliciesType) (req *aws.Request, output *PoliciesType) {
	if opDescribePolicies == nil {
		opDescribePolicies = &aws.Operation{
			Name:       "DescribePolicies",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribePolicies, input, output)
	output = &PoliciesType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribePolicies(input *DescribePoliciesType) (output *PoliciesType, err error) {
	req, out := c.DescribePoliciesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribePolicies *aws.Operation

// DescribeScalingActivitiesRequest generates a request for the DescribeScalingActivities operation.
func (c *AutoScaling) DescribeScalingActivitiesRequest(input *DescribeScalingActivitiesType) (req *aws.Request, output *ActivitiesType) {
	if opDescribeScalingActivities == nil {
		opDescribeScalingActivities = &aws.Operation{
			Name:       "DescribeScalingActivities",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScalingActivities, input, output)
	output = &ActivitiesType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeScalingActivities(input *DescribeScalingActivitiesType) (output *ActivitiesType, err error) {
	req, out := c.DescribeScalingActivitiesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeScalingActivities *aws.Operation

// DescribeScalingProcessTypesRequest generates a request for the DescribeScalingProcessTypes operation.
func (c *AutoScaling) DescribeScalingProcessTypesRequest() (req *aws.Request, output *ProcessesType) {
	if opDescribeScalingProcessTypes == nil {
		opDescribeScalingProcessTypes = &aws.Operation{
			Name:       "DescribeScalingProcessTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScalingProcessTypes, nil, output)
	output = &ProcessesType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeScalingProcessTypes() (output *ProcessesType, err error) {
	req, out := c.DescribeScalingProcessTypesRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeScalingProcessTypes *aws.Operation

// DescribeScheduledActionsRequest generates a request for the DescribeScheduledActions operation.
func (c *AutoScaling) DescribeScheduledActionsRequest(input *DescribeScheduledActionsType) (req *aws.Request, output *ScheduledActionsType) {
	if opDescribeScheduledActions == nil {
		opDescribeScheduledActions = &aws.Operation{
			Name:       "DescribeScheduledActions",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeScheduledActions, input, output)
	output = &ScheduledActionsType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeScheduledActions(input *DescribeScheduledActionsType) (output *ScheduledActionsType, err error) {
	req, out := c.DescribeScheduledActionsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeScheduledActions *aws.Operation

// DescribeTagsRequest generates a request for the DescribeTags operation.
func (c *AutoScaling) DescribeTagsRequest(input *DescribeTagsType) (req *aws.Request, output *TagsType) {
	if opDescribeTags == nil {
		opDescribeTags = &aws.Operation{
			Name:       "DescribeTags",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTags, input, output)
	output = &TagsType{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeTags(input *DescribeTagsType) (output *TagsType, err error) {
	req, out := c.DescribeTagsRequest(input)
	output = out
	err = req.Send()
	return
}

var opDescribeTags *aws.Operation

// DescribeTerminationPolicyTypesRequest generates a request for the DescribeTerminationPolicyTypes operation.
func (c *AutoScaling) DescribeTerminationPolicyTypesRequest() (req *aws.Request, output *DescribeTerminationPolicyTypesAnswer) {
	if opDescribeTerminationPolicyTypes == nil {
		opDescribeTerminationPolicyTypes = &aws.Operation{
			Name:       "DescribeTerminationPolicyTypes",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDescribeTerminationPolicyTypes, nil, output)
	output = &DescribeTerminationPolicyTypesAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DescribeTerminationPolicyTypes() (output *DescribeTerminationPolicyTypesAnswer, err error) {
	req, out := c.DescribeTerminationPolicyTypesRequest()
	output = out
	err = req.Send()
	return
}

var opDescribeTerminationPolicyTypes *aws.Operation

// DetachInstancesRequest generates a request for the DetachInstances operation.
func (c *AutoScaling) DetachInstancesRequest(input *DetachInstancesQuery) (req *aws.Request, output *DetachInstancesAnswer) {
	if opDetachInstances == nil {
		opDetachInstances = &aws.Operation{
			Name:       "DetachInstances",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDetachInstances, input, output)
	output = &DetachInstancesAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) DetachInstances(input *DetachInstancesQuery) (output *DetachInstancesAnswer, err error) {
	req, out := c.DetachInstancesRequest(input)
	output = out
	err = req.Send()
	return
}

var opDetachInstances *aws.Operation

// DisableMetricsCollectionRequest generates a request for the DisableMetricsCollection operation.
func (c *AutoScaling) DisableMetricsCollectionRequest(input *DisableMetricsCollectionQuery) (req *aws.Request) {
	if opDisableMetricsCollection == nil {
		opDisableMetricsCollection = &aws.Operation{
			Name:       "DisableMetricsCollection",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opDisableMetricsCollection, input, nil)

	return
}

func (c *AutoScaling) DisableMetricsCollection(input *DisableMetricsCollectionQuery) (err error) {
	req := c.DisableMetricsCollectionRequest(input)
	err = req.Send()
	return
}

var opDisableMetricsCollection *aws.Operation

// EnableMetricsCollectionRequest generates a request for the EnableMetricsCollection operation.
func (c *AutoScaling) EnableMetricsCollectionRequest(input *EnableMetricsCollectionQuery) (req *aws.Request) {
	if opEnableMetricsCollection == nil {
		opEnableMetricsCollection = &aws.Operation{
			Name:       "EnableMetricsCollection",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opEnableMetricsCollection, input, nil)

	return
}

func (c *AutoScaling) EnableMetricsCollection(input *EnableMetricsCollectionQuery) (err error) {
	req := c.EnableMetricsCollectionRequest(input)
	err = req.Send()
	return
}

var opEnableMetricsCollection *aws.Operation

// EnterStandbyRequest generates a request for the EnterStandby operation.
func (c *AutoScaling) EnterStandbyRequest(input *EnterStandbyQuery) (req *aws.Request, output *EnterStandbyAnswer) {
	if opEnterStandby == nil {
		opEnterStandby = &aws.Operation{
			Name:       "EnterStandby",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opEnterStandby, input, output)
	output = &EnterStandbyAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) EnterStandby(input *EnterStandbyQuery) (output *EnterStandbyAnswer, err error) {
	req, out := c.EnterStandbyRequest(input)
	output = out
	err = req.Send()
	return
}

var opEnterStandby *aws.Operation

// ExecutePolicyRequest generates a request for the ExecutePolicy operation.
func (c *AutoScaling) ExecutePolicyRequest(input *ExecutePolicyType) (req *aws.Request) {
	if opExecutePolicy == nil {
		opExecutePolicy = &aws.Operation{
			Name:       "ExecutePolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opExecutePolicy, input, nil)

	return
}

func (c *AutoScaling) ExecutePolicy(input *ExecutePolicyType) (err error) {
	req := c.ExecutePolicyRequest(input)
	err = req.Send()
	return
}

var opExecutePolicy *aws.Operation

// ExitStandbyRequest generates a request for the ExitStandby operation.
func (c *AutoScaling) ExitStandbyRequest(input *ExitStandbyQuery) (req *aws.Request, output *ExitStandbyAnswer) {
	if opExitStandby == nil {
		opExitStandby = &aws.Operation{
			Name:       "ExitStandby",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opExitStandby, input, output)
	output = &ExitStandbyAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) ExitStandby(input *ExitStandbyQuery) (output *ExitStandbyAnswer, err error) {
	req, out := c.ExitStandbyRequest(input)
	output = out
	err = req.Send()
	return
}

var opExitStandby *aws.Operation

// PutLifecycleHookRequest generates a request for the PutLifecycleHook operation.
func (c *AutoScaling) PutLifecycleHookRequest(input *PutLifecycleHookType) (req *aws.Request, output *PutLifecycleHookAnswer) {
	if opPutLifecycleHook == nil {
		opPutLifecycleHook = &aws.Operation{
			Name:       "PutLifecycleHook",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutLifecycleHook, input, output)
	output = &PutLifecycleHookAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) PutLifecycleHook(input *PutLifecycleHookType) (output *PutLifecycleHookAnswer, err error) {
	req, out := c.PutLifecycleHookRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutLifecycleHook *aws.Operation

// PutNotificationConfigurationRequest generates a request for the PutNotificationConfiguration operation.
func (c *AutoScaling) PutNotificationConfigurationRequest(input *PutNotificationConfigurationType) (req *aws.Request) {
	if opPutNotificationConfiguration == nil {
		opPutNotificationConfiguration = &aws.Operation{
			Name:       "PutNotificationConfiguration",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutNotificationConfiguration, input, nil)

	return
}

func (c *AutoScaling) PutNotificationConfiguration(input *PutNotificationConfigurationType) (err error) {
	req := c.PutNotificationConfigurationRequest(input)
	err = req.Send()
	return
}

var opPutNotificationConfiguration *aws.Operation

// PutScalingPolicyRequest generates a request for the PutScalingPolicy operation.
func (c *AutoScaling) PutScalingPolicyRequest(input *PutScalingPolicyType) (req *aws.Request, output *PolicyARNType) {
	if opPutScalingPolicy == nil {
		opPutScalingPolicy = &aws.Operation{
			Name:       "PutScalingPolicy",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutScalingPolicy, input, output)
	output = &PolicyARNType{}
	req.Data = output
	return
}

func (c *AutoScaling) PutScalingPolicy(input *PutScalingPolicyType) (output *PolicyARNType, err error) {
	req, out := c.PutScalingPolicyRequest(input)
	output = out
	err = req.Send()
	return
}

var opPutScalingPolicy *aws.Operation

// PutScheduledUpdateGroupActionRequest generates a request for the PutScheduledUpdateGroupAction operation.
func (c *AutoScaling) PutScheduledUpdateGroupActionRequest(input *PutScheduledUpdateGroupActionType) (req *aws.Request) {
	if opPutScheduledUpdateGroupAction == nil {
		opPutScheduledUpdateGroupAction = &aws.Operation{
			Name:       "PutScheduledUpdateGroupAction",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opPutScheduledUpdateGroupAction, input, nil)

	return
}

func (c *AutoScaling) PutScheduledUpdateGroupAction(input *PutScheduledUpdateGroupActionType) (err error) {
	req := c.PutScheduledUpdateGroupActionRequest(input)
	err = req.Send()
	return
}

var opPutScheduledUpdateGroupAction *aws.Operation

// RecordLifecycleActionHeartbeatRequest generates a request for the RecordLifecycleActionHeartbeat operation.
func (c *AutoScaling) RecordLifecycleActionHeartbeatRequest(input *RecordLifecycleActionHeartbeatType) (req *aws.Request, output *RecordLifecycleActionHeartbeatAnswer) {
	if opRecordLifecycleActionHeartbeat == nil {
		opRecordLifecycleActionHeartbeat = &aws.Operation{
			Name:       "RecordLifecycleActionHeartbeat",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opRecordLifecycleActionHeartbeat, input, output)
	output = &RecordLifecycleActionHeartbeatAnswer{}
	req.Data = output
	return
}

func (c *AutoScaling) RecordLifecycleActionHeartbeat(input *RecordLifecycleActionHeartbeatType) (output *RecordLifecycleActionHeartbeatAnswer, err error) {
	req, out := c.RecordLifecycleActionHeartbeatRequest(input)
	output = out
	err = req.Send()
	return
}

var opRecordLifecycleActionHeartbeat *aws.Operation

// ResumeProcessesRequest generates a request for the ResumeProcesses operation.
func (c *AutoScaling) ResumeProcessesRequest(input *ScalingProcessQuery) (req *aws.Request) {
	if opResumeProcesses == nil {
		opResumeProcesses = &aws.Operation{
			Name:       "ResumeProcesses",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opResumeProcesses, input, nil)

	return
}

func (c *AutoScaling) ResumeProcesses(input *ScalingProcessQuery) (err error) {
	req := c.ResumeProcessesRequest(input)
	err = req.Send()
	return
}

var opResumeProcesses *aws.Operation

// SetDesiredCapacityRequest generates a request for the SetDesiredCapacity operation.
func (c *AutoScaling) SetDesiredCapacityRequest(input *SetDesiredCapacityType) (req *aws.Request) {
	if opSetDesiredCapacity == nil {
		opSetDesiredCapacity = &aws.Operation{
			Name:       "SetDesiredCapacity",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSetDesiredCapacity, input, nil)

	return
}

func (c *AutoScaling) SetDesiredCapacity(input *SetDesiredCapacityType) (err error) {
	req := c.SetDesiredCapacityRequest(input)
	err = req.Send()
	return
}

var opSetDesiredCapacity *aws.Operation

// SetInstanceHealthRequest generates a request for the SetInstanceHealth operation.
func (c *AutoScaling) SetInstanceHealthRequest(input *SetInstanceHealthQuery) (req *aws.Request) {
	if opSetInstanceHealth == nil {
		opSetInstanceHealth = &aws.Operation{
			Name:       "SetInstanceHealth",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSetInstanceHealth, input, nil)

	return
}

func (c *AutoScaling) SetInstanceHealth(input *SetInstanceHealthQuery) (err error) {
	req := c.SetInstanceHealthRequest(input)
	err = req.Send()
	return
}

var opSetInstanceHealth *aws.Operation

// SuspendProcessesRequest generates a request for the SuspendProcesses operation.
func (c *AutoScaling) SuspendProcessesRequest(input *ScalingProcessQuery) (req *aws.Request) {
	if opSuspendProcesses == nil {
		opSuspendProcesses = &aws.Operation{
			Name:       "SuspendProcesses",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opSuspendProcesses, input, nil)

	return
}

func (c *AutoScaling) SuspendProcesses(input *ScalingProcessQuery) (err error) {
	req := c.SuspendProcessesRequest(input)
	err = req.Send()
	return
}

var opSuspendProcesses *aws.Operation

// TerminateInstanceInAutoScalingGroupRequest generates a request for the TerminateInstanceInAutoScalingGroup operation.
func (c *AutoScaling) TerminateInstanceInAutoScalingGroupRequest(input *TerminateInstanceInAutoScalingGroupType) (req *aws.Request, output *ActivityType) {
	if opTerminateInstanceInAutoScalingGroup == nil {
		opTerminateInstanceInAutoScalingGroup = &aws.Operation{
			Name:       "TerminateInstanceInAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opTerminateInstanceInAutoScalingGroup, input, output)
	output = &ActivityType{}
	req.Data = output
	return
}

func (c *AutoScaling) TerminateInstanceInAutoScalingGroup(input *TerminateInstanceInAutoScalingGroupType) (output *ActivityType, err error) {
	req, out := c.TerminateInstanceInAutoScalingGroupRequest(input)
	output = out
	err = req.Send()
	return
}

var opTerminateInstanceInAutoScalingGroup *aws.Operation

// UpdateAutoScalingGroupRequest generates a request for the UpdateAutoScalingGroup operation.
func (c *AutoScaling) UpdateAutoScalingGroupRequest(input *UpdateAutoScalingGroupType) (req *aws.Request) {
	if opUpdateAutoScalingGroup == nil {
		opUpdateAutoScalingGroup = &aws.Operation{
			Name:       "UpdateAutoScalingGroup",
			HTTPMethod: "POST",
			HTTPPath:   "/",
		}
	}

	req = aws.NewRequest(c.Service, opUpdateAutoScalingGroup, input, nil)

	return
}

func (c *AutoScaling) UpdateAutoScalingGroup(input *UpdateAutoScalingGroupType) (err error) {
	req := c.UpdateAutoScalingGroupRequest(input)
	err = req.Send()
	return
}

var opUpdateAutoScalingGroup *aws.Operation

type ActivitiesType struct {
	Activities []*Activity `type:"list"`
	NextToken  *string     `type:"string"`

	metadataActivitiesType `json:"-", xml:"-"`
}

type metadataActivitiesType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeScalingActivitiesResult" required:"Activities"`
}

type Activity struct {
	ActivityID           *string    `locationName:"ActivityId" type:"string"`
	AutoScalingGroupName *string    `type:"string"`
	Cause                *string    `type:"string"`
	Description          *string    `type:"string"`
	Details              *string    `type:"string"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Progress             *int       `type:"integer"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	StatusCode           *string    `type:"string"`
	StatusMessage        *string    `type:"string"`

	metadataActivity `json:"-", xml:"-"`
}

type metadataActivity struct {
	SDKShapeTraits bool `type:"structure" required:"ActivityId,AutoScalingGroupName,Cause,StartTime,StatusCode"`
}

type ActivityType struct {
	Activity *Activity `type:"structure"`

	metadataActivityType `json:"-", xml:"-"`
}

type metadataActivityType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"TerminateInstanceInAutoScalingGroupResult"`
}

type AdjustmentType struct {
	AdjustmentType *string `type:"string"`

	metadataAdjustmentType `json:"-", xml:"-"`
}

type metadataAdjustmentType struct {
	SDKShapeTraits bool `type:"structure"`
}

type Alarm struct {
	AlarmARN  *string `type:"string"`
	AlarmName *string `type:"string"`

	metadataAlarm `json:"-", xml:"-"`
}

type metadataAlarm struct {
	SDKShapeTraits bool `type:"structure"`
}

type AlreadyExistsFault struct {
	Message *string `locationName:"message" type:"string"`

	metadataAlreadyExistsFault `json:"-", xml:"-"`
}

type metadataAlreadyExistsFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type AttachInstancesQuery struct {
	AutoScalingGroupName *string   `type:"string"`
	InstanceIDs          []*string `locationName:"InstanceIds" type:"list"`

	metadataAttachInstancesQuery `json:"-", xml:"-"`
}

type metadataAttachInstancesQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}

type AutoScalingGroup struct {
	AutoScalingGroupARN     *string             `type:"string"`
	AutoScalingGroupName    *string             `type:"string"`
	AvailabilityZones       []*string           `type:"list"`
	CreatedTime             *time.Time          `type:"timestamp" timestampFormat:"iso8601"`
	DefaultCooldown         *int                `type:"integer"`
	DesiredCapacity         *int                `type:"integer"`
	EnabledMetrics          []*EnabledMetric    `type:"list"`
	HealthCheckGracePeriod  *int                `type:"integer"`
	HealthCheckType         *string             `type:"string"`
	Instances               []*Instance         `type:"list"`
	LaunchConfigurationName *string             `type:"string"`
	LoadBalancerNames       []*string           `type:"list"`
	MaxSize                 *int                `type:"integer"`
	MinSize                 *int                `type:"integer"`
	PlacementGroup          *string             `type:"string"`
	Status                  *string             `type:"string"`
	SuspendedProcesses      []*SuspendedProcess `type:"list"`
	Tags                    []*TagDescription   `type:"list"`
	TerminationPolicies     []*string           `type:"list"`
	VPCZoneIdentifier       *string             `type:"string"`

	metadataAutoScalingGroup `json:"-", xml:"-"`
}

type metadataAutoScalingGroup struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,LaunchConfigurationName,MinSize,MaxSize,DesiredCapacity,DefaultCooldown,AvailabilityZones,HealthCheckType,CreatedTime"`
}

type AutoScalingGroupNamesType struct {
	AutoScalingGroupNames []*string `type:"list"`
	MaxRecords            *int      `type:"integer"`
	NextToken             *string   `type:"string"`

	metadataAutoScalingGroupNamesType `json:"-", xml:"-"`
}

type metadataAutoScalingGroupNamesType struct {
	SDKShapeTraits bool `type:"structure"`
}

type AutoScalingGroupsType struct {
	AutoScalingGroups []*AutoScalingGroup `type:"list"`
	NextToken         *string             `type:"string"`

	metadataAutoScalingGroupsType `json:"-", xml:"-"`
}

type metadataAutoScalingGroupsType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeAutoScalingGroupsResult" required:"AutoScalingGroups"`
}

type AutoScalingInstanceDetails struct {
	AutoScalingGroupName    *string `type:"string"`
	AvailabilityZone        *string `type:"string"`
	HealthStatus            *string `type:"string"`
	InstanceID              *string `locationName:"InstanceId" type:"string"`
	LaunchConfigurationName *string `type:"string"`
	LifecycleState          *string `type:"string"`

	metadataAutoScalingInstanceDetails `json:"-", xml:"-"`
}

type metadataAutoScalingInstanceDetails struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceId,AutoScalingGroupName,AvailabilityZone,LifecycleState,HealthStatus,LaunchConfigurationName"`
}

type AutoScalingInstancesType struct {
	AutoScalingInstances []*AutoScalingInstanceDetails `type:"list"`
	NextToken            *string                       `type:"string"`

	metadataAutoScalingInstancesType `json:"-", xml:"-"`
}

type metadataAutoScalingInstancesType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeAutoScalingInstancesResult"`
}

type BlockDeviceMapping struct {
	DeviceName  *string `type:"string"`
	EBS         *EBS    `locationName:"Ebs" type:"structure"`
	NoDevice    *bool   `type:"boolean"`
	VirtualName *string `type:"string"`

	metadataBlockDeviceMapping `json:"-", xml:"-"`
}

type metadataBlockDeviceMapping struct {
	SDKShapeTraits bool `type:"structure" required:"DeviceName"`
}

type CompleteLifecycleActionAnswer struct {
	metadataCompleteLifecycleActionAnswer `json:"-", xml:"-"`
}

type metadataCompleteLifecycleActionAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"CompleteLifecycleActionResult"`
}

type CompleteLifecycleActionType struct {
	AutoScalingGroupName  *string `type:"string"`
	LifecycleActionResult *string `type:"string"`
	LifecycleActionToken  *string `type:"string"`
	LifecycleHookName     *string `type:"string"`

	metadataCompleteLifecycleActionType `json:"-", xml:"-"`
}

type metadataCompleteLifecycleActionType struct {
	SDKShapeTraits bool `type:"structure" required:"LifecycleHookName,AutoScalingGroupName,LifecycleActionToken,LifecycleActionResult"`
}

type CreateAutoScalingGroupType struct {
	AutoScalingGroupName    *string   `type:"string"`
	AvailabilityZones       []*string `type:"list"`
	DefaultCooldown         *int      `type:"integer"`
	DesiredCapacity         *int      `type:"integer"`
	HealthCheckGracePeriod  *int      `type:"integer"`
	HealthCheckType         *string   `type:"string"`
	InstanceID              *string   `locationName:"InstanceId" type:"string"`
	LaunchConfigurationName *string   `type:"string"`
	LoadBalancerNames       []*string `type:"list"`
	MaxSize                 *int      `type:"integer"`
	MinSize                 *int      `type:"integer"`
	PlacementGroup          *string   `type:"string"`
	Tags                    []*Tag    `type:"list"`
	TerminationPolicies     []*string `type:"list"`
	VPCZoneIdentifier       *string   `type:"string"`

	metadataCreateAutoScalingGroupType `json:"-", xml:"-"`
}

type metadataCreateAutoScalingGroupType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,MinSize,MaxSize"`
}

type CreateLaunchConfigurationType struct {
	AssociatePublicIPAddress     *bool                 `locationName:"AssociatePublicIpAddress" type:"boolean"`
	BlockDeviceMappings          []*BlockDeviceMapping `type:"list"`
	ClassicLinkVPCID             *string               `locationName:"ClassicLinkVPCId" type:"string"`
	ClassicLinkVPCSecurityGroups []*string             `type:"list"`
	EBSOptimized                 *bool                 `locationName:"EbsOptimized" type:"boolean"`
	IAMInstanceProfile           *string               `locationName:"IamInstanceProfile" type:"string"`
	ImageID                      *string               `locationName:"ImageId" type:"string"`
	InstanceID                   *string               `locationName:"InstanceId" type:"string"`
	InstanceMonitoring           *InstanceMonitoring   `type:"structure"`
	InstanceType                 *string               `type:"string"`
	KernelID                     *string               `locationName:"KernelId" type:"string"`
	KeyName                      *string               `type:"string"`
	LaunchConfigurationName      *string               `type:"string"`
	PlacementTenancy             *string               `type:"string"`
	RAMDiskID                    *string               `locationName:"RamdiskId" type:"string"`
	SecurityGroups               []*string             `type:"list"`
	SpotPrice                    *string               `type:"string"`
	UserData                     *string               `type:"string"`

	metadataCreateLaunchConfigurationType `json:"-", xml:"-"`
}

type metadataCreateLaunchConfigurationType struct {
	SDKShapeTraits bool `type:"structure" required:"LaunchConfigurationName"`
}

type CreateOrUpdateTagsType struct {
	Tags []*Tag `type:"list"`

	metadataCreateOrUpdateTagsType `json:"-", xml:"-"`
}

type metadataCreateOrUpdateTagsType struct {
	SDKShapeTraits bool `type:"structure" required:"Tags"`
}

type DeleteAutoScalingGroupType struct {
	AutoScalingGroupName *string `type:"string"`
	ForceDelete          *bool   `type:"boolean"`

	metadataDeleteAutoScalingGroupType `json:"-", xml:"-"`
}

type metadataDeleteAutoScalingGroupType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}

type DeleteLifecycleHookAnswer struct {
	metadataDeleteLifecycleHookAnswer `json:"-", xml:"-"`
}

type metadataDeleteLifecycleHookAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DeleteLifecycleHookResult"`
}

type DeleteLifecycleHookType struct {
	AutoScalingGroupName *string `type:"string"`
	LifecycleHookName    *string `type:"string"`

	metadataDeleteLifecycleHookType `json:"-", xml:"-"`
}

type metadataDeleteLifecycleHookType struct {
	SDKShapeTraits bool `type:"structure" required:"LifecycleHookName,AutoScalingGroupName"`
}

type DeleteNotificationConfigurationType struct {
	AutoScalingGroupName *string `type:"string"`
	TopicARN             *string `type:"string"`

	metadataDeleteNotificationConfigurationType `json:"-", xml:"-"`
}

type metadataDeleteNotificationConfigurationType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,TopicARN"`
}

type DeletePolicyType struct {
	AutoScalingGroupName *string `type:"string"`
	PolicyName           *string `type:"string"`

	metadataDeletePolicyType `json:"-", xml:"-"`
}

type metadataDeletePolicyType struct {
	SDKShapeTraits bool `type:"structure" required:"PolicyName"`
}

type DeleteScheduledActionType struct {
	AutoScalingGroupName *string `type:"string"`
	ScheduledActionName  *string `type:"string"`

	metadataDeleteScheduledActionType `json:"-", xml:"-"`
}

type metadataDeleteScheduledActionType struct {
	SDKShapeTraits bool `type:"structure" required:"ScheduledActionName"`
}

type DeleteTagsType struct {
	Tags []*Tag `type:"list"`

	metadataDeleteTagsType `json:"-", xml:"-"`
}

type metadataDeleteTagsType struct {
	SDKShapeTraits bool `type:"structure" required:"Tags"`
}

type DescribeAccountLimitsAnswer struct {
	MaxNumberOfAutoScalingGroups    *int `type:"integer"`
	MaxNumberOfLaunchConfigurations *int `type:"integer"`

	metadataDescribeAccountLimitsAnswer `json:"-", xml:"-"`
}

type metadataDescribeAccountLimitsAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeAccountLimitsResult"`
}

type DescribeAdjustmentTypesAnswer struct {
	AdjustmentTypes []*AdjustmentType `type:"list"`

	metadataDescribeAdjustmentTypesAnswer `json:"-", xml:"-"`
}

type metadataDescribeAdjustmentTypesAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeAdjustmentTypesResult"`
}

type DescribeAutoScalingInstancesType struct {
	InstanceIDs []*string `locationName:"InstanceIds" type:"list"`
	MaxRecords  *int      `type:"integer"`
	NextToken   *string   `type:"string"`

	metadataDescribeAutoScalingInstancesType `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingInstancesType struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeAutoScalingNotificationTypesAnswer struct {
	AutoScalingNotificationTypes []*string `type:"list"`

	metadataDescribeAutoScalingNotificationTypesAnswer `json:"-", xml:"-"`
}

type metadataDescribeAutoScalingNotificationTypesAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeAutoScalingNotificationTypesResult"`
}

type DescribeLifecycleHookTypesAnswer struct {
	LifecycleHookTypes []*string `type:"list"`

	metadataDescribeLifecycleHookTypesAnswer `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHookTypesAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeLifecycleHookTypesResult"`
}

type DescribeLifecycleHooksAnswer struct {
	LifecycleHooks []*LifecycleHook `type:"list"`

	metadataDescribeLifecycleHooksAnswer `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHooksAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeLifecycleHooksResult"`
}

type DescribeLifecycleHooksType struct {
	AutoScalingGroupName *string   `type:"string"`
	LifecycleHookNames   []*string `type:"list"`

	metadataDescribeLifecycleHooksType `json:"-", xml:"-"`
}

type metadataDescribeLifecycleHooksType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}

type DescribeMetricCollectionTypesAnswer struct {
	Granularities []*MetricGranularityType `type:"list"`
	Metrics       []*MetricCollectionType  `type:"list"`

	metadataDescribeMetricCollectionTypesAnswer `json:"-", xml:"-"`
}

type metadataDescribeMetricCollectionTypesAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeMetricCollectionTypesResult"`
}

type DescribeNotificationConfigurationsAnswer struct {
	NextToken                  *string                      `type:"string"`
	NotificationConfigurations []*NotificationConfiguration `type:"list"`

	metadataDescribeNotificationConfigurationsAnswer `json:"-", xml:"-"`
}

type metadataDescribeNotificationConfigurationsAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeNotificationConfigurationsResult" required:"NotificationConfigurations"`
}

type DescribeNotificationConfigurationsType struct {
	AutoScalingGroupNames []*string `type:"list"`
	MaxRecords            *int      `type:"integer"`
	NextToken             *string   `type:"string"`

	metadataDescribeNotificationConfigurationsType `json:"-", xml:"-"`
}

type metadataDescribeNotificationConfigurationsType struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribePoliciesType struct {
	AutoScalingGroupName *string   `type:"string"`
	MaxRecords           *int      `type:"integer"`
	NextToken            *string   `type:"string"`
	PolicyNames          []*string `type:"list"`

	metadataDescribePoliciesType `json:"-", xml:"-"`
}

type metadataDescribePoliciesType struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScalingActivitiesType struct {
	ActivityIDs          []*string `locationName:"ActivityIds" type:"list"`
	AutoScalingGroupName *string   `type:"string"`
	MaxRecords           *int      `type:"integer"`
	NextToken            *string   `type:"string"`

	metadataDescribeScalingActivitiesType `json:"-", xml:"-"`
}

type metadataDescribeScalingActivitiesType struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeScheduledActionsType struct {
	AutoScalingGroupName *string    `type:"string"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	MaxRecords           *int       `type:"integer"`
	NextToken            *string    `type:"string"`
	ScheduledActionNames []*string  `type:"list"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataDescribeScheduledActionsType `json:"-", xml:"-"`
}

type metadataDescribeScheduledActionsType struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTagsType struct {
	Filters    []*Filter `type:"list"`
	MaxRecords *int      `type:"integer"`
	NextToken  *string   `type:"string"`

	metadataDescribeTagsType `json:"-", xml:"-"`
}

type metadataDescribeTagsType struct {
	SDKShapeTraits bool `type:"structure"`
}

type DescribeTerminationPolicyTypesAnswer struct {
	TerminationPolicyTypes []*string `type:"list"`

	metadataDescribeTerminationPolicyTypesAnswer `json:"-", xml:"-"`
}

type metadataDescribeTerminationPolicyTypesAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeTerminationPolicyTypesResult"`
}

type DetachInstancesAnswer struct {
	Activities []*Activity `type:"list"`

	metadataDetachInstancesAnswer `json:"-", xml:"-"`
}

type metadataDetachInstancesAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DetachInstancesResult"`
}

type DetachInstancesQuery struct {
	AutoScalingGroupName           *string   `type:"string"`
	InstanceIDs                    []*string `locationName:"InstanceIds" type:"list"`
	ShouldDecrementDesiredCapacity *bool     `type:"boolean"`

	metadataDetachInstancesQuery `json:"-", xml:"-"`
}

type metadataDetachInstancesQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,ShouldDecrementDesiredCapacity"`
}

type DisableMetricsCollectionQuery struct {
	AutoScalingGroupName *string   `type:"string"`
	Metrics              []*string `type:"list"`

	metadataDisableMetricsCollectionQuery `json:"-", xml:"-"`
}

type metadataDisableMetricsCollectionQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}

type EBS struct {
	DeleteOnTermination *bool   `type:"boolean"`
	IOPS                *int    `locationName:"Iops" type:"integer"`
	SnapshotID          *string `locationName:"SnapshotId" type:"string"`
	VolumeSize          *int    `type:"integer"`
	VolumeType          *string `type:"string"`

	metadataEBS `json:"-", xml:"-"`
}

type metadataEBS struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnableMetricsCollectionQuery struct {
	AutoScalingGroupName *string   `type:"string"`
	Granularity          *string   `type:"string"`
	Metrics              []*string `type:"list"`

	metadataEnableMetricsCollectionQuery `json:"-", xml:"-"`
}

type metadataEnableMetricsCollectionQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,Granularity"`
}

type EnabledMetric struct {
	Granularity *string `type:"string"`
	Metric      *string `type:"string"`

	metadataEnabledMetric `json:"-", xml:"-"`
}

type metadataEnabledMetric struct {
	SDKShapeTraits bool `type:"structure"`
}

type EnterStandbyAnswer struct {
	Activities []*Activity `type:"list"`

	metadataEnterStandbyAnswer `json:"-", xml:"-"`
}

type metadataEnterStandbyAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"EnterStandbyResult"`
}

type EnterStandbyQuery struct {
	AutoScalingGroupName           *string   `type:"string"`
	InstanceIDs                    []*string `locationName:"InstanceIds" type:"list"`
	ShouldDecrementDesiredCapacity *bool     `type:"boolean"`

	metadataEnterStandbyQuery `json:"-", xml:"-"`
}

type metadataEnterStandbyQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,ShouldDecrementDesiredCapacity"`
}

type ExecutePolicyType struct {
	AutoScalingGroupName *string `type:"string"`
	HonorCooldown        *bool   `type:"boolean"`
	PolicyName           *string `type:"string"`

	metadataExecutePolicyType `json:"-", xml:"-"`
}

type metadataExecutePolicyType struct {
	SDKShapeTraits bool `type:"structure" required:"PolicyName"`
}

type ExitStandbyAnswer struct {
	Activities []*Activity `type:"list"`

	metadataExitStandbyAnswer `json:"-", xml:"-"`
}

type metadataExitStandbyAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"ExitStandbyResult"`
}

type ExitStandbyQuery struct {
	AutoScalingGroupName *string   `type:"string"`
	InstanceIDs          []*string `locationName:"InstanceIds" type:"list"`

	metadataExitStandbyQuery `json:"-", xml:"-"`
}

type metadataExitStandbyQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}

type Filter struct {
	Name   *string   `type:"string"`
	Values []*string `type:"list"`

	metadataFilter `json:"-", xml:"-"`
}

type metadataFilter struct {
	SDKShapeTraits bool `type:"structure"`
}

type Instance struct {
	AvailabilityZone        *string `type:"string"`
	HealthStatus            *string `type:"string"`
	InstanceID              *string `locationName:"InstanceId" type:"string"`
	LaunchConfigurationName *string `type:"string"`
	LifecycleState          *string `type:"string"`

	metadataInstance `json:"-", xml:"-"`
}

type metadataInstance struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceId,AvailabilityZone,LifecycleState,HealthStatus,LaunchConfigurationName"`
}

type InstanceMonitoring struct {
	Enabled *bool `type:"boolean"`

	metadataInstanceMonitoring `json:"-", xml:"-"`
}

type metadataInstanceMonitoring struct {
	SDKShapeTraits bool `type:"structure"`
}

type InvalidNextToken struct {
	Message *string `locationName:"message" type:"string"`

	metadataInvalidNextToken `json:"-", xml:"-"`
}

type metadataInvalidNextToken struct {
	SDKShapeTraits bool `type:"structure"`
}

type LaunchConfiguration struct {
	AssociatePublicIPAddress     *bool                 `locationName:"AssociatePublicIpAddress" type:"boolean"`
	BlockDeviceMappings          []*BlockDeviceMapping `type:"list"`
	ClassicLinkVPCID             *string               `locationName:"ClassicLinkVPCId" type:"string"`
	ClassicLinkVPCSecurityGroups []*string             `type:"list"`
	CreatedTime                  *time.Time            `type:"timestamp" timestampFormat:"iso8601"`
	EBSOptimized                 *bool                 `locationName:"EbsOptimized" type:"boolean"`
	IAMInstanceProfile           *string               `locationName:"IamInstanceProfile" type:"string"`
	ImageID                      *string               `locationName:"ImageId" type:"string"`
	InstanceMonitoring           *InstanceMonitoring   `type:"structure"`
	InstanceType                 *string               `type:"string"`
	KernelID                     *string               `locationName:"KernelId" type:"string"`
	KeyName                      *string               `type:"string"`
	LaunchConfigurationARN       *string               `type:"string"`
	LaunchConfigurationName      *string               `type:"string"`
	PlacementTenancy             *string               `type:"string"`
	RAMDiskID                    *string               `locationName:"RamdiskId" type:"string"`
	SecurityGroups               []*string             `type:"list"`
	SpotPrice                    *string               `type:"string"`
	UserData                     *string               `type:"string"`

	metadataLaunchConfiguration `json:"-", xml:"-"`
}

type metadataLaunchConfiguration struct {
	SDKShapeTraits bool `type:"structure" required:"LaunchConfigurationName,ImageId,InstanceType,CreatedTime"`
}

type LaunchConfigurationNameType struct {
	LaunchConfigurationName *string `type:"string"`

	metadataLaunchConfigurationNameType `json:"-", xml:"-"`
}

type metadataLaunchConfigurationNameType struct {
	SDKShapeTraits bool `type:"structure" required:"LaunchConfigurationName"`
}

type LaunchConfigurationNamesType struct {
	LaunchConfigurationNames []*string `type:"list"`
	MaxRecords               *int      `type:"integer"`
	NextToken                *string   `type:"string"`

	metadataLaunchConfigurationNamesType `json:"-", xml:"-"`
}

type metadataLaunchConfigurationNamesType struct {
	SDKShapeTraits bool `type:"structure"`
}

type LaunchConfigurationsType struct {
	LaunchConfigurations []*LaunchConfiguration `type:"list"`
	NextToken            *string                `type:"string"`

	metadataLaunchConfigurationsType `json:"-", xml:"-"`
}

type metadataLaunchConfigurationsType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeLaunchConfigurationsResult" required:"LaunchConfigurations"`
}

type LifecycleHook struct {
	AutoScalingGroupName  *string `type:"string"`
	DefaultResult         *string `type:"string"`
	GlobalTimeout         *int    `type:"integer"`
	HeartbeatTimeout      *int    `type:"integer"`
	LifecycleHookName     *string `type:"string"`
	LifecycleTransition   *string `type:"string"`
	NotificationMetadata  *string `type:"string"`
	NotificationTargetARN *string `type:"string"`
	RoleARN               *string `type:"string"`

	metadataLifecycleHook `json:"-", xml:"-"`
}

type metadataLifecycleHook struct {
	SDKShapeTraits bool `type:"structure"`
}

type LimitExceededFault struct {
	Message *string `locationName:"message" type:"string"`

	metadataLimitExceededFault `json:"-", xml:"-"`
}

type metadataLimitExceededFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type MetricCollectionType struct {
	Metric *string `type:"string"`

	metadataMetricCollectionType `json:"-", xml:"-"`
}

type metadataMetricCollectionType struct {
	SDKShapeTraits bool `type:"structure"`
}

type MetricGranularityType struct {
	Granularity *string `type:"string"`

	metadataMetricGranularityType `json:"-", xml:"-"`
}

type metadataMetricGranularityType struct {
	SDKShapeTraits bool `type:"structure"`
}

type NotificationConfiguration struct {
	AutoScalingGroupName *string `type:"string"`
	NotificationType     *string `type:"string"`
	TopicARN             *string `type:"string"`

	metadataNotificationConfiguration `json:"-", xml:"-"`
}

type metadataNotificationConfiguration struct {
	SDKShapeTraits bool `type:"structure"`
}

type PoliciesType struct {
	NextToken       *string          `type:"string"`
	ScalingPolicies []*ScalingPolicy `type:"list"`

	metadataPoliciesType `json:"-", xml:"-"`
}

type metadataPoliciesType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribePoliciesResult"`
}

type PolicyARNType struct {
	PolicyARN *string `type:"string"`

	metadataPolicyARNType `json:"-", xml:"-"`
}

type metadataPolicyARNType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"PutScalingPolicyResult"`
}

type ProcessType struct {
	ProcessName *string `type:"string"`

	metadataProcessType `json:"-", xml:"-"`
}

type metadataProcessType struct {
	SDKShapeTraits bool `type:"structure" required:"ProcessName"`
}

type ProcessesType struct {
	Processes []*ProcessType `type:"list"`

	metadataProcessesType `json:"-", xml:"-"`
}

type metadataProcessesType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeScalingProcessTypesResult"`
}

type PutLifecycleHookAnswer struct {
	metadataPutLifecycleHookAnswer `json:"-", xml:"-"`
}

type metadataPutLifecycleHookAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"PutLifecycleHookResult"`
}

type PutLifecycleHookType struct {
	AutoScalingGroupName  *string `type:"string"`
	DefaultResult         *string `type:"string"`
	HeartbeatTimeout      *int    `type:"integer"`
	LifecycleHookName     *string `type:"string"`
	LifecycleTransition   *string `type:"string"`
	NotificationMetadata  *string `type:"string"`
	NotificationTargetARN *string `type:"string"`
	RoleARN               *string `type:"string"`

	metadataPutLifecycleHookType `json:"-", xml:"-"`
}

type metadataPutLifecycleHookType struct {
	SDKShapeTraits bool `type:"structure" required:"LifecycleHookName,AutoScalingGroupName"`
}

type PutNotificationConfigurationType struct {
	AutoScalingGroupName *string   `type:"string"`
	NotificationTypes    []*string `type:"list"`
	TopicARN             *string   `type:"string"`

	metadataPutNotificationConfigurationType `json:"-", xml:"-"`
}

type metadataPutNotificationConfigurationType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,TopicARN,NotificationTypes"`
}

type PutScalingPolicyType struct {
	AdjustmentType       *string `type:"string"`
	AutoScalingGroupName *string `type:"string"`
	Cooldown             *int    `type:"integer"`
	MinAdjustmentStep    *int    `type:"integer"`
	PolicyName           *string `type:"string"`
	ScalingAdjustment    *int    `type:"integer"`

	metadataPutScalingPolicyType `json:"-", xml:"-"`
}

type metadataPutScalingPolicyType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,PolicyName,ScalingAdjustment,AdjustmentType"`
}

type PutScheduledUpdateGroupActionType struct {
	AutoScalingGroupName *string    `type:"string"`
	DesiredCapacity      *int       `type:"integer"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	MaxSize              *int       `type:"integer"`
	MinSize              *int       `type:"integer"`
	Recurrence           *string    `type:"string"`
	ScheduledActionName  *string    `type:"string"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Time                 *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataPutScheduledUpdateGroupActionType `json:"-", xml:"-"`
}

type metadataPutScheduledUpdateGroupActionType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,ScheduledActionName"`
}

type RecordLifecycleActionHeartbeatAnswer struct {
	metadataRecordLifecycleActionHeartbeatAnswer `json:"-", xml:"-"`
}

type metadataRecordLifecycleActionHeartbeatAnswer struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"RecordLifecycleActionHeartbeatResult"`
}

type RecordLifecycleActionHeartbeatType struct {
	AutoScalingGroupName *string `type:"string"`
	LifecycleActionToken *string `type:"string"`
	LifecycleHookName    *string `type:"string"`

	metadataRecordLifecycleActionHeartbeatType `json:"-", xml:"-"`
}

type metadataRecordLifecycleActionHeartbeatType struct {
	SDKShapeTraits bool `type:"structure" required:"LifecycleHookName,AutoScalingGroupName,LifecycleActionToken"`
}

type ResourceInUseFault struct {
	Message *string `locationName:"message" type:"string"`

	metadataResourceInUseFault `json:"-", xml:"-"`
}

type metadataResourceInUseFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingActivityInProgressFault struct {
	Message *string `locationName:"message" type:"string"`

	metadataScalingActivityInProgressFault `json:"-", xml:"-"`
}

type metadataScalingActivityInProgressFault struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingPolicy struct {
	AdjustmentType       *string  `type:"string"`
	Alarms               []*Alarm `type:"list"`
	AutoScalingGroupName *string  `type:"string"`
	Cooldown             *int     `type:"integer"`
	MinAdjustmentStep    *int     `type:"integer"`
	PolicyARN            *string  `type:"string"`
	PolicyName           *string  `type:"string"`
	ScalingAdjustment    *int     `type:"integer"`

	metadataScalingPolicy `json:"-", xml:"-"`
}

type metadataScalingPolicy struct {
	SDKShapeTraits bool `type:"structure"`
}

type ScalingProcessQuery struct {
	AutoScalingGroupName *string   `type:"string"`
	ScalingProcesses     []*string `type:"list"`

	metadataScalingProcessQuery `json:"-", xml:"-"`
}

type metadataScalingProcessQuery struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}

type ScheduledActionsType struct {
	NextToken                   *string                       `type:"string"`
	ScheduledUpdateGroupActions []*ScheduledUpdateGroupAction `type:"list"`

	metadataScheduledActionsType `json:"-", xml:"-"`
}

type metadataScheduledActionsType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeScheduledActionsResult"`
}

type ScheduledUpdateGroupAction struct {
	AutoScalingGroupName *string    `type:"string"`
	DesiredCapacity      *int       `type:"integer"`
	EndTime              *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	MaxSize              *int       `type:"integer"`
	MinSize              *int       `type:"integer"`
	Recurrence           *string    `type:"string"`
	ScheduledActionARN   *string    `type:"string"`
	ScheduledActionName  *string    `type:"string"`
	StartTime            *time.Time `type:"timestamp" timestampFormat:"iso8601"`
	Time                 *time.Time `type:"timestamp" timestampFormat:"iso8601"`

	metadataScheduledUpdateGroupAction `json:"-", xml:"-"`
}

type metadataScheduledUpdateGroupAction struct {
	SDKShapeTraits bool `type:"structure"`
}

type SetDesiredCapacityType struct {
	AutoScalingGroupName *string `type:"string"`
	DesiredCapacity      *int    `type:"integer"`
	HonorCooldown        *bool   `type:"boolean"`

	metadataSetDesiredCapacityType `json:"-", xml:"-"`
}

type metadataSetDesiredCapacityType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName,DesiredCapacity"`
}

type SetInstanceHealthQuery struct {
	HealthStatus             *string `type:"string"`
	InstanceID               *string `locationName:"InstanceId" type:"string"`
	ShouldRespectGracePeriod *bool   `type:"boolean"`

	metadataSetInstanceHealthQuery `json:"-", xml:"-"`
}

type metadataSetInstanceHealthQuery struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceId,HealthStatus"`
}

type SuspendedProcess struct {
	ProcessName      *string `type:"string"`
	SuspensionReason *string `type:"string"`

	metadataSuspendedProcess `json:"-", xml:"-"`
}

type metadataSuspendedProcess struct {
	SDKShapeTraits bool `type:"structure"`
}

type Tag struct {
	Key               *string `type:"string"`
	PropagateAtLaunch *bool   `type:"boolean"`
	ResourceID        *string `locationName:"ResourceId" type:"string"`
	ResourceType      *string `type:"string"`
	Value             *string `type:"string"`

	metadataTag `json:"-", xml:"-"`
}

type metadataTag struct {
	SDKShapeTraits bool `type:"structure" required:"Key"`
}

type TagDescription struct {
	Key               *string `type:"string"`
	PropagateAtLaunch *bool   `type:"boolean"`
	ResourceID        *string `locationName:"ResourceId" type:"string"`
	ResourceType      *string `type:"string"`
	Value             *string `type:"string"`

	metadataTagDescription `json:"-", xml:"-"`
}

type metadataTagDescription struct {
	SDKShapeTraits bool `type:"structure"`
}

type TagsType struct {
	NextToken *string           `type:"string"`
	Tags      []*TagDescription `type:"list"`

	metadataTagsType `json:"-", xml:"-"`
}

type metadataTagsType struct {
	SDKShapeTraits bool `type:"structure" resultWrapper:"DescribeTagsResult"`
}

type TerminateInstanceInAutoScalingGroupType struct {
	InstanceID                     *string `locationName:"InstanceId" type:"string"`
	ShouldDecrementDesiredCapacity *bool   `type:"boolean"`

	metadataTerminateInstanceInAutoScalingGroupType `json:"-", xml:"-"`
}

type metadataTerminateInstanceInAutoScalingGroupType struct {
	SDKShapeTraits bool `type:"structure" required:"InstanceId,ShouldDecrementDesiredCapacity"`
}

type UpdateAutoScalingGroupType struct {
	AutoScalingGroupName    *string   `type:"string"`
	AvailabilityZones       []*string `type:"list"`
	DefaultCooldown         *int      `type:"integer"`
	DesiredCapacity         *int      `type:"integer"`
	HealthCheckGracePeriod  *int      `type:"integer"`
	HealthCheckType         *string   `type:"string"`
	LaunchConfigurationName *string   `type:"string"`
	MaxSize                 *int      `type:"integer"`
	MinSize                 *int      `type:"integer"`
	PlacementGroup          *string   `type:"string"`
	TerminationPolicies     []*string `type:"list"`
	VPCZoneIdentifier       *string   `type:"string"`

	metadataUpdateAutoScalingGroupType `json:"-", xml:"-"`
}

type metadataUpdateAutoScalingGroupType struct {
	SDKShapeTraits bool `type:"structure" required:"AutoScalingGroupName"`
}